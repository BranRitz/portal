sudo: required
addons:
  chrome: stable
dist: trusty
cache:
  pip: true
  directories:
  - node_modules
  - static
python:
- '2.7'
os:
- linux
stages:
- lint
- test
matrix:
  include:
  - name: npm test
    language: python
    python:
    - '2.7'
    stage: test
    install:
    - pip install -r requirements.txt
    - find designsafe/settings/* -name *.sample.* | while read line; do cp $line ${line/sample\./};
      done;
    - "./manage.py collectstatic --settings=designsafe.settings.test_settings --no-input
      --link -i cms -i admin -i djangocms_text_ckeditor -i node_modules -i angular*
      -i babel* -i rxjs > /dev/null"
    - npm install
    - npm install -g codecov
    script:
    - npm run test
    after_script:
    - npm run report-coverage
  - name: unittests
    language: python
    python:
    - '2.7'
    stage: test
    install:
    - pip install -r requirements.txt
    - find designsafe/settings/* -name *.sample.* | while read line; do cp $line ${line/sample\./};
      done;
    - "./manage.py collectstatic --settings=designsafe.settings.test_settings --no-input
      --link -i cms -i admin -i djangocms_text_ckeditor -i node_modules -i angular*
      -i babel* -i rxjs > /dev/null"
    script:
    - coverage run --branch --source='designsafe' manage.py test --settings=designsafe.settings.test_settings
      --pattern=tests.py -v2
    after_script:
    - coverage xml
    - codecov
  - name: Flake8
    language: python
    python:
    - '2.7'
    stage: lint
    install:
    - pip install -r requirements.txt
    - find designsafe/settings/* -name *.sample.* | while read line; do cp $line ${line/sample\./};
      done;
    - "./manage.py collectstatic --settings=designsafe.settings.test_settings --no-input
      --link -i cms -i admin -i djangocms_text_ckeditor -i node_modules -i angular*
      -i babel* -i rxjs > /dev/null"
    script:
    - flake8 designsafe
  - name: pylint
    language: python
    python:
    - '2.7'
    stage: lint
    install:
    - pip install -r requirements.txt
    - find designsafe/settings/* -name *.sample.* | while read line; do cp $line ${line/sample\./};
      done;
    - "./manage.py collectstatic --settings=designsafe.settings.test_settings --no-input
      --link -i cms -i admin -i djangocms_text_ckeditor -i node_modules -i angular*
      -i babel* -i rxjs > /dev/null"
    script:
    - pylint designsafe
  - name: pydocstyle
    language: python
    python:
    - '2.7'
    stage: lint
    install:
    - pip install -r requirements.txt
    - find designsafe/settings/* -name *.sample.* | while read line; do cp $line ${line/sample\./};
      done;
    - "./manage.py collectstatic --settings=designsafe.settings.test_settings --no-input
      --link -i cms -i admin -i djangocms_text_ckeditor -i node_modules -i angular*
      -i babel* -i rxjs > /dev/null"
    script:
    - pydocstyle designsafe
  - name: eslint
    language: node_js
    node_js:
    - node
    stage: lint
    install:
    - npm install sync-exec
    - npm install
    script:
    - npm run-script lint
  allow_failures:
  - name: Flake8
    language: python
    python:
    - '2.7'
    stage: lint
    install:
    - pip install -r requirements.txt
    - find designsafe/settings/* -name *.sample.* | while read line; do cp $line ${line/sample\./};
      done;
    - "./manage.py collectstatic --settings=designsafe.settings.test_settings --no-input
      --link -i cms -i admin -i djangocms_text_ckeditor -i node_modules -i angular*
      -i babel* -i rxjs > /dev/null"
    script:
    - flake8 designsafe
  - name: pylint
    language: python
    python:
    - '2.7'
    stage: lint
    install:
    - pip install -r requirements.txt
    - find designsafe/settings/* -name *.sample.* | while read line; do cp $line ${line/sample\./};
      done;
    - "./manage.py collectstatic --settings=designsafe.settings.test_settings --no-input
      --link -i cms -i admin -i djangocms_text_ckeditor -i node_modules -i angular*
      -i babel* -i rxjs > /dev/null"
    script:
    - pylint designsafe
  - name: pydocstyle
    language: python
    python:
    - '2.7'
    stage: lint
    install:
    - pip install -r requirements.txt
    - find designsafe/settings/* -name *.sample.* | while read line; do cp $line ${line/sample\./};
      done;
    - "./manage.py collectstatic --settings=designsafe.settings.test_settings --no-input
      --link -i cms -i admin -i djangocms_text_ckeditor -i node_modules -i angular*
      -i babel* -i rxjs > /dev/null"
    script:
    - pydocstyle designsafe
  - name: eslint
    language: node_js
    node_js:
    - node
    stage: lint
    install:
    - npm install sync-exec
    - npm install
    script:
    - npm run-script lint
before_script:
- df -h
notifications:
  slack: 
    - secure: WiH00UKG6M1zCUJmQSwfLCdQ/aCMqQy1woBE8+4T5rQ2da3cK5r/LRvBIoliYmQgyBNCAlYQ7a079Qrd0oe8E0MdslUwvh7s8opklheOosGsoUQ4gWu1IxnBKAXXenyt3ZpTCjEVSUW58uD2pI/ZQtj2qZ17nzGrT174W6Fh59tIMUIYc3KhP4O6ExllZ5/hx3fLhyulpV78mfWEZMjr703Z5Rlpkrz/6JPpAsrmgwq5KfehZX0p/FBFne0tBdtfPc2qUyf9JNCphKajiAm5Z4ppI+rL52GTuTC5uWf0J1OPQ+KU/AgUF7t6DAhvD6+/JeSlC0MWV/D360HZjJa8tm/YRFhQPLiaZVnhUCd6/7DPLLiMKTZV3TPoZTrEv2Y2ZBzXLg/Yyz7YY9N+8pQBRmscXM0tsv6xXKXHFav+JsfCSesVcEf612wNYLliApupMUx/lNsVRgoZ7ZLAEGwkJ/JIg+L+NqmPTHfvHdochuHY/VEb/jA1nXC+NLXjykpO9j+K+ZGpfibi6OlrVSSS4VNnpw9S4GQg0F/sU8vnJF9lv29gLkzIRGbLzwB9sNpGtToJphevYOBGhovMJ9wc+QPuqDe0CsIH5FLThFZkh5uo3Fd69WGf4f/W/YNf9bK9FWtme+np09wghWLklOoMJCvsDVn+hzmG/upwZtm9XPg=
    on_success: always
    on_failure: always
