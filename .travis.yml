sudo: required
addons:
  chrome: stable
dist: trusty
cache:
  pip: true
  directories:
  - node_modules
  - static
python:
- '2.7'
os:
- linux
stages:
- lint
- test
matrix:
  include:
  - name: npm test
    language: python
    python:
    - '2.7'
    stage: test
    install:
    - pip install -r requirements.txt
    - find designsafe/settings/* -name *.sample.* | while read line; do cp $line ${line/sample\./};
      done;
    - "./manage.py collectstatic --settings=designsafe.settings.test_settings --no-input
      --link -i cms -i admin -i djangocms_text_ckeditor -i node_modules -i angular*
      -i babel* -i rxjs > /dev/null"
    - npm install
    - npm install -g codecov
    script:
    - npm run test
    after_script:
    - npm run report-coverage
  - name: unittests
    language: python
    python:
    - '2.7'
    stage: test
    install:
    - pip install -r requirements.txt
    - find designsafe/settings/* -name *.sample.* | while read line; do cp $line ${line/sample\./};
      done;
    - "./manage.py collectstatic --settings=designsafe.settings.test_settings --no-input
      --link -i cms -i admin -i djangocms_text_ckeditor -i node_modules -i angular*
      -i babel* -i rxjs > /dev/null"
    script:
    - coverage run --branch --source='designsafe' manage.py test --settings=designsafe.settings.test_settings
      --pattern=tests.py -v2
    after_script:
    - coverage xml
    - codecov
  - name: Flake8
    language: python
    python:
    - '2.7'
    stage: lint
    install:
    - pip install -r requirements.txt
    - find designsafe/settings/* -name *.sample.* | while read line; do cp $line ${line/sample\./};
      done;
    - "./manage.py collectstatic --settings=designsafe.settings.test_settings --no-input
      --link -i cms -i admin -i djangocms_text_ckeditor -i node_modules -i angular*
      -i babel* -i rxjs > /dev/null"
    script:
    - flake8 designsafe
  - name: pylint
    language: python
    python:
    - '2.7'
    stage: lint
    install:
    - pip install -r requirements.txt
    - find designsafe/settings/* -name *.sample.* | while read line; do cp $line ${line/sample\./};
      done;
    - "./manage.py collectstatic --settings=designsafe.settings.test_settings --no-input
      --link -i cms -i admin -i djangocms_text_ckeditor -i node_modules -i angular*
      -i babel* -i rxjs > /dev/null"
    script:
    - pylint designsafe
  - name: pydocstyle
    language: python
    python:
    - '2.7'
    stage: lint
    install:
    - pip install -r requirements.txt
    - find designsafe/settings/* -name *.sample.* | while read line; do cp $line ${line/sample\./};
      done;
    - "./manage.py collectstatic --settings=designsafe.settings.test_settings --no-input
      --link -i cms -i admin -i djangocms_text_ckeditor -i node_modules -i angular*
      -i babel* -i rxjs > /dev/null"
    script:
    - pydocstyle designsafe
  - name: eslint
    language: node_js
    node_js:
    - node
    stage: lint
    install:
    - npm install sync-exec
    - npm install
    script:
    - npm run-script lint
  allow_failures:
  - name: Flake8
    language: python
    python:
    - '2.7'
    stage: lint
    install:
    - pip install -r requirements.txt
    - find designsafe/settings/* -name *.sample.* | while read line; do cp $line ${line/sample\./};
      done;
    - "./manage.py collectstatic --settings=designsafe.settings.test_settings --no-input
      --link -i cms -i admin -i djangocms_text_ckeditor -i node_modules -i angular*
      -i babel* -i rxjs > /dev/null"
    script:
    - flake8 designsafe
  - name: pylint
    language: python
    python:
    - '2.7'
    stage: lint
    install:
    - pip install -r requirements.txt
    - find designsafe/settings/* -name *.sample.* | while read line; do cp $line ${line/sample\./};
      done;
    - "./manage.py collectstatic --settings=designsafe.settings.test_settings --no-input
      --link -i cms -i admin -i djangocms_text_ckeditor -i node_modules -i angular*
      -i babel* -i rxjs > /dev/null"
    script:
    - pylint designsafe
  - name: pydocstyle
    language: python
    python:
    - '2.7'
    stage: lint
    install:
    - pip install -r requirements.txt
    - find designsafe/settings/* -name *.sample.* | while read line; do cp $line ${line/sample\./};
      done;
    - "./manage.py collectstatic --settings=designsafe.settings.test_settings --no-input
      --link -i cms -i admin -i djangocms_text_ckeditor -i node_modules -i angular*
      -i babel* -i rxjs > /dev/null"
    script:
    - pydocstyle designsafe
  - name: eslint
    language: node_js
    node_js:
    - node
    stage: lint
    install:
    - npm install sync-exec
    - npm install
    script:
    - npm run-script lint
before_script:
- df -h
notifications:
  slack:
    rooms:
      - secure: J0axFZ8RDBAss2hG0q0AF0/k/EVt+aDiLBXuvB2kwR4tVxAn6lpra8e1NczMPa3cm6G6DO+vW20LdRg5Wf6+Ay1fu1ULjOCONziKSzcRzZubdftpiCPSgWXVl7QqmEdTNqLXXNddgL4SWbkKeNTtK4OHD0rk1z+qD8eTF7JVFZnEdEOjHctG0GGaDm+kPDYyqJ9smsSYsHPJMbo9g3Igq8wtnap+xxuwYUPoCjeV3spB/36R1qwh/YAoR3rN5RKfxg/VyRfaFHngUSo8wwQpnR4AsORjYEwuo0hhj4ETYIi9MSPaI2VMARVdgZZ5UgQdvTmOFjpQ/GuB0gN+Gpk+1okfENpRUHrJYLCJHG1Qki9pl3Scc0eXrTxaSxzWezXjaQrPIyzr3Z2uG+riB2FR9ykZ5xgHZNFu5gBnbKCuLPj9ohj+LRax8BfL03gzaObHBF0sU0y+IExbjuvh1LB9/hd9eADRSdAJhnT39h9D5Chqmk1+zFAny7ap0DEZL/EoO0OhjtnmcPj4Hm+fqthZOemPcwObNpuxORUn2PuwhfuEC2aijCq4C6OVbyvg7fwO4D7nSUZcnmFwOgYFlnIGHiuYFLCIiNcol2wr2vIIPjdoLwK+uxkZGQou7OSthojMY6EnJGSrm9tOAlR+9FMX6PnD3ORplXBeM2gb+NBwtjA=
    on_success: always
    on_failure: always

