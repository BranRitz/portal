{"version":3,"sources":["webpack:///webpack/bootstrap 54c7907634294b9e81a7","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/controllers/db-modal.js","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/models/layer_group.js","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/models/map-project.js","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/utils/geo-utils.js","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/controllers/index.js","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/directives/index.js","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/services/index.js","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/controllers/confirm-clear-modal.js","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/controllers/help.js","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/controllers/image-overlay-modal.js","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/controllers/image-preview-modal.js","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/controllers/map-sidebar.js","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/controllers/settings-modal.js","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/directives/custom-on-change.js","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/services/geo-data-service.js","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/services/geo-settings-service.js","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/services/geo-state-service.js","webpack:///external \"L\"","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/index.js"],"names":["DBModalCtrl","$scope","$uibModalInstance","filename","selected","saveas","dismiss","label","fg","feature_group","show","show_contents","getLayers","f","options","name","layer_groups","description","forEach","lg","clearLayers","bounds","push","getBounds","total","num_features","out","tmp","json","feature","toGeoJSON","GeoUtils","RESERVED_KEYS","indexOf","properties","key","features","fname","split","pop","toLowerCase","get_file_extension","mod","controller","service","HelpCtrl","data","url","min_lat","max_lat","min_lon","max_lon","ImagePreviewModal","marker","$rootScope","$window","$timeout","$interval","$q","$uibModal","toastr","LGeo","DataService","$http","GeoDataService","GeoSettingsService","settings","local_file_selected","streets","L","tileLayer","satellite","maxZoom","preferCanvas","setView","mc","Control","control","layers","basemaps","addTo","map","zoomControl","setPosition","HazmapperDivIcon","project","fit_map_to_project","active_layer_group","current_project","add_draw_controls","object","color","default_stroke_color","fillOpacity","default_fill_opacity","addLayer","Marker","getElement","fillColor","default_marker_color","$apply","on","e","active_image_marker","d","fitBounds","console","log","dc","Draw","position","draw","circle","icon","edit","featureGroup","remove","drawControl","layer","removeLayer","active","select_active_layer_group","i","splice","removeControl","current_layer","templateUrl","modal","result","then","p","src_lg","prop","styles","style","setStyle","update","metadata","k","v","adding_metadata","metadata_value","ev","retval","_init_map_layers","open_existing","length","open_db_modal","resolve","load_from_data_depot","href","size","res","file","read_file_as_data_url","overlay","imageOverlay","$","_load_data_success","loading","err","target","reqs","prom","all","success","error","save_locally","newname","rej","close","SettingsModalCtrl","customOnChange","scope","handler","link","element","UserService","previous_project_state","className","html","active_project","blob","max_height","base64","canvas","document","canvasCopy","createElement","copyContext","getContext","img","Image","src","onload","ratio","width","max_width","height","drawImage","ctx","toDataURL","buffer","binary","bytes","Uint8Array","encoded","btoa","text_blob","l","omnivore","kml","parse","zipper","proms","zip","files","ext","async","txt","pointToLayer","props","latlng","getLatLng","_make_image_marker","lat","lng","iconSize","tmpl","preview","maxWidth","$broadcast","image_src","agave_file","exif","EXIF","readFromBinaryFile","lonRef","GPSLongitudeRef","lon","thumb","_resize_image","resp","_links","self","opacity","layer_group_index","reader","readAsArrayBuffer","_from_kml","responseType","get","agaveUrl","gjson","to_json","URL","a","download","textContent","click","body","removeChild","form","FormData","base_file_url","post_url","path","type","File","append","trail","post","measurement_units","GeoStateService","angular","config","$stateProvider","$uibTooltipProvider","timeOut","$locationProvider","html5Mode","abstract","auth","state","$urlRouterProvider","when","popupDelay"],"mappings":"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","file":"./designsafe/apps/geo/static/designsafe/apps/geo/build/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 18);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 54c7907634294b9e81a7","export default class DBModalCtrl {\n\n  constructor ($scope, $uibModalInstance, filename) {\n    'ngInject';\n    this.$scope = $scope;\n    this.$uibModalInstance = $uibModalInstance;\n    this.selected = null;\n    this.saveas = {filename: filename};\n  }\n\n  ok () {\n    this.$uibModalInstance.close({selected:this.selected, saveas:this.saveas.filename});\n  };\n\n  cancel () {\n    this.$uibModalInstance.dismiss('cancel');\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/controllers/db-modal.js","export default class LayerGroup {\n\n  constructor (label, fg) {\n    this.label = label;\n    this.feature_group = fg;\n    this.show = true;\n    this.show_contents = true;\n  }\n\n  num_features () {\n    return this.feature_group.getLayers().length;\n  }\n\n  get_feature_type (f) {\n    // debugger\n    if (f.options.thumb_src) {\n      return 'Image';\n    } else if (f instanceof L.Marker) {\n      return 'Point';\n    } else if (f instanceof L.Polygon) {\n      return 'Polygon';\n    } else {\n      return 'Path';\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/models/layer_group.js","import L from 'L';\nimport * as GeoUtils from '../utils/geo-utils';\nimport angular from 'angular';\n\nexport default class MapProject {\n\n  constructor (name) {\n    this.name = name;\n    this.layer_groups = [];\n    this.description = null;\n  }\n\n  clear() {\n    this.layer_groups.forEach( (lg) => {\n      lg.feature_group.clearLayers();\n    });\n  }\n\n  get_bounds() {\n    let bounds = [];\n    this.layer_groups.forEach( (lg) => {\n      bounds.push(lg.feature_group.getBounds());\n    });\n    return bounds;\n  }\n\n  num_features () {\n    total = 0;\n    this.layer_groups.forEach( (lg) => {\n      total += lg.num_features();\n    });\n  }\n\n  to_json() {\n    let out = {\n      \"type\": \"FeatureCollection\",\n      \"features\": [],\n      \"ds_map\": true,\n      \"name\": this.name,\n      \"description\": this.description,\n      \"num_layers\": this.layer_groups.length,\n      \"layer_groups\": []\n    };\n    this.layer_groups.forEach( (lg, lg_idx) => {\n      out.layer_groups.push(lg.label);\n      let tmp = {\n        \"type\": \"FeatureCollection\",\n        \"features\": [],\n        \"label\": lg.label\n      };\n      lg.feature_group.getLayers().forEach( (feature) => {\n        let json = feature.toGeoJSON();\n        // These are all the keys in the options object that we need to\n        // re-create the layers in the application after loading.\n\n\n        for (let key in feature.options) {\n          if (GeoUtils.RESERVED_KEYS.indexOf(key) !== -1) {\n            json.properties[key] = feature.options[key];\n          }\n        };\n        json.layer_group_index = lg_idx;\n        out.features.push(json);\n      });\n    });\n    return out;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/models/map-project.js","function get_file_extension (fname) {\n  return fname.split('.').pop().toLowerCase();\n}\n\nconst RESERVED_KEYS = [\n  'label',\n  'color',\n  'fillColor',\n  'fillOpacity',\n  'description',\n  'image_src',\n  'thumb_src',\n  'href',\n  'metadata'\n];\n\nexport {RESERVED_KEYS, get_file_extension};\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/utils/geo-utils.js","import MapSidebarCtrl from './map-sidebar';\nimport DBModalCtrl from './db-modal';\nimport ImageOverlayModalCtrl from './image-overlay-modal.js';\nimport HelpCtrl from './help';\nimport SettingsModalCtrl from './settings-modal';\nimport ConfirmClearModalCtrl from './confirm-clear-modal';\nimport ImagePreviewModal from './image-preview-modal';\n\nlet mod = angular.module('ds.geo.controllers', []);\n\nmod.controller('MapSidebarCtrl', MapSidebarCtrl);\nmod.controller('DBModalCtrl', DBModalCtrl);\nmod.controller('HelpCtrl', HelpCtrl);\nmod.controller('SettingsModalCtrl', SettingsModalCtrl);\nmod.controller('ConfirmClearModalCtrl', ConfirmClearModalCtrl);\nmod.controller('ImageOverlayModalCtrl', ImageOverlayModalCtrl);\nmod.controller('ImagePreviewModal', ImagePreviewModal);\n\nexport default mod;\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/controllers/index.js","import customOnChange from './custom-on-change';\n\nlet mod = angular.module('ds.geo.directives', []);\n\n\nmod.directive('customOnChange', customOnChange);\nexport default mod;\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/directives/index.js","// import customOnChange from './custom-on-change';\nimport GeoStateService from './geo-state-service';\nimport GeoDataService from './geo-data-service';\nimport GeoSettingsService from './geo-settings-service';\n\nlet mod = angular.module('ds.geo.services', []);\nmod.service('GeoStateService', GeoStateService);\nmod.service('GeoDataService', GeoDataService);\nmod.service('GeoSettingsService', GeoSettingsService);\n\n// mod.directive('customOnChange', customOnChange);\n\nexport default mod;\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/services/index.js","export default class ConfirmClearModalCtrl {\n\n  constructor ($scope, $uibModalInstance, GeoSettingsService) {\n    'ngInject';\n    this.$scope = $scope;\n    this.$uibModalInstance = $uibModalInstance;\n  }\n\n  ok () {\n    this.$uibModalInstance.close('ok');\n  };\n\n  cancel () {\n    this.$uibModalInstance.dismiss('cancel');\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/controllers/confirm-clear-modal.js","export default class HelpCtrl {\n\n  constructor ($scope) {\n    'ngInject';\n    this.$scope = $scope;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/controllers/help.js","export default class ImageOverlayModalCtrl {\n\n  constructor ($scope, $uibModalInstance) {\n    'ngInject';\n    this.$scope = $scope;\n    this.$uibModalInstance = $uibModalInstance;\n    this.data = {\n      file: null,\n      url: null,\n      min_lat: null,\n      max_lat: null,\n      min_lon: null,\n      max_lon: null\n    };\n  }\n\n  ok () {\n    this.$uibModalInstance.close(this.data);\n  };\n\n  cancel () {\n    this.$uibModalInstance.dismiss('cancel');\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/controllers/image-overlay-modal.js","export default class ImagePreviewModal {\n\n  constructor ($scope, $uibModalInstance, GeoDataService, marker) {\n    'ngInject';\n    this.$scope = $scope;\n    this.$uibModalInstance = $uibModalInstance;\n    this.GeoDataService = GeoDataService;\n    this.marker = marker;\n    console.log(\"ImagePreviewModal\", this.marker);\n  }\n\n  cancel () {\n    this.$uibModalInstance.dismiss('cancel');\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/controllers/image-preview-modal.js","import LayerGroup from '../models/layer_group';\nimport MapProject from '../models/map-project';\nimport DBModalCtrl from './db-modal';\nimport * as GeoUtils from '../utils/geo-utils';\n\nexport default class MapSidebarCtrl {\n\n  constructor ($rootScope, $scope, $window, $timeout, $interval, $q, $uibModal, toastr, DataService, $http, GeoDataService, GeoSettingsService) {\n    'ngInject';\n    this.$rootScope = $rootScope;\n    this.$scope = $scope;\n    this.LGeo = $window.LGeo;\n    this.$timeout = $timeout;\n    this.$interval = $interval;\n    this.$window = $window;\n    this.$q = $q;\n    this.$uibModal = $uibModal;\n    this.DataService = DataService;\n    this.$http = $http;\n    this.GeoDataService = GeoDataService;\n    this.GeoSettingsService = GeoSettingsService;\n    this.toastr = toastr;\n    this.settings = this.GeoSettingsService.settings;\n\n    //method binding for callback, sigh...\n    this.local_file_selected = this.local_file_selected.bind(this);\n    // this.open_db_modal = this.open_db_modal.bind(this);\n\n    let streets = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n    });\n\n    let satellite = L.tileLayer(\n      'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {\n      attribution: '&copy;',\n      maxZoom: 20,\n    });\n\n    let basemaps = {\n      'Street': streets,\n      'Satellite': satellite\n    };\n    this.map = L.map('geo_map', {\n        layers: [streets, satellite],\n        preferCanvas: false\n      }).setView([0, 0], 3);\n    this.mc = new L.Control.Measure({primaryLengthUnit:'meters', primaryAreaUnit: 'meters'});\n    this.mc.addTo(this.map);\n    L.control.layers(basemaps).addTo(this.map);\n    this.map.zoomControl.setPosition('bottomleft');\n\n    // Overload the default marker icon\n    this.HazmapperDivIcon = GeoDataService.HazmapperDivIcon;\n\n    // Load in a map project from the data service if one does exist, if not\n    // create a new one from scratch\n    if (this.GeoDataService.current_project()) {\n      this.project = this.GeoDataService.current_project();\n\n      this._init_map_layers();\n      this.fit_map_to_project();\n\n    } else {\n      this.project = new MapProject('New Map');\n      this.project.layer_groups = [new LayerGroup('New Group', new L.FeatureGroup())];\n      this.map.addLayer(this.project.layer_groups[0].feature_group);\n    }\n\n    // this._add_click_handlers();\n\n    // trick to fix the tiles that sometimes don't load for some reason...\n    $timeout( () => {this.map.invalidateSize();}, 10);\n\n    // init an active layer group\n    this.active_layer_group = this.project.layer_groups[0];\n\n    // Auto keep track of current project in the GeoDataService\n    // so that if they switch states they will not lose work...\n    $interval( () => {\n      this.GeoDataService.current_project(this.project);\n    }, 1000);\n\n    this.add_draw_controls(this.active_layer_group.feature_group);\n\n    // This handles making sure that the features that get created with the draw tool\n    // are styled with the default colors etc.\n    this.map.on('draw:created',  (e) => {\n      let object = e.layer;\n      object.options.color = this.settings.default_stroke_color;\n      object.options.fillColor = this.settings.default_fill_color;\n      object.options.fillOpacity = this.settings.default_fill_opacity;\n      this.active_layer_group.feature_group.addLayer(object);\n      if (object instanceof L.Marker) {\n        object.getElement().style.color = this.settings.default_marker_color;\n        object.options.fillColor = this.settings.default_marker_color;\n\n      }\n\n      this.$scope.$apply();\n    });\n\n    this.map.on('mousemove', (e) => {\n      this.current_mouse_coordinates = e.latlng;\n      this.$scope.$apply();\n    });\n\n    this.$scope.$on('image_popupopen', (e,d) => {\n      // console.log(e, d);\n      this.active_image_marker = d;\n    });\n    this.$scope.$on('image_popupclose', (e,d) => {\n      // console.log(e, d);\n      this.active_image_marker = null;\n    });\n\n  } // end constructor\n\n  fit_map_to_project() {\n    try {\n      this.map.fitBounds(this.project.get_bounds(), {maxZoom: 16});\n    } catch (e) {\n      console.log('get_bounds fail', e);\n    }\n  }\n\n  add_draw_controls (fg) {\n    let dc = new L.Control.Draw({\n      position: 'topright',\n      draw: {\n        circle: false,\n        marker: {\n          icon: this.HazmapperDivIcon\n        }\n      },\n      edit: {\n       featureGroup: fg,\n       remove: true\n      }\n    });\n    this.map.addControl(dc);\n    this.drawControl = dc;\n  }\n\n  feature_click (layer) {\n    console.log(layer);\n  }\n\n  _init_map_layers() {\n    // For some reason, need to readd the feature groups for markers to be displayed correctly???\n    this.project.layer_groups.forEach( (lg)=>{\n      // lg.feature_group.getLayers().forEach( (layer)=>{\n      //   this.map.addLayer(layer);\n      // });\n      // this.map.addLayer(lg.feature_group);\n      this.map.removeLayer(lg.feature_group);\n      this.map.addLayer(lg.feature_group);\n      lg.feature_group.getLayers().forEach( (layer) => {\n        if ( (layer instanceof L.Marker) && (!(layer.options.image_src)) ){\n          layer.getElement().style.color = layer.options.fillColor;\n        }\n      });\n    });\n    this.active_layer_group = this.project.layer_groups[0];\n  }\n\n  // Adds click handlers to map elements. This does NOT feel\n  // right to me...\n  _add_click_handlers () {\n    this.project.layer_groups.forEach( (lg) => {\n      lg.feature_group.on('click', (ev)=> {\n        this.project.layer_groups.forEach( (lg) => {\n          lg.feature_group.getLayers().forEach( (layer)=>{\n            layer.active = false;\n            if (layer == ev.layer) {\n              layer.active = true;\n            }\n          });\n        });\n      });\n    });\n  }\n\n  create_layer_group () {\n    let lg = new LayerGroup(\"New Group\", new L.FeatureGroup());\n    this.project.layer_groups.push(lg);\n    this.active_layer_group = this.project.layer_groups[this.project.layer_groups.length -1];\n    this.map.addLayer(lg.feature_group);\n    this.select_active_layer_group(this.active_layer_group);\n  }\n\n  delete_layer_group (lg, i) {\n    this.map.removeLayer(lg.feature_group);\n    this.project.layer_groups.splice(i, 1);\n    if (this.project.layer_groups.length === 0) {\n      this.create_layer_group();\n    }\n    this.active_layer_group = this.project.layer_groups[0];\n  }\n\n  delete_feature (lg, f) {\n    this.map.removeLayer(f);\n    lg.feature_group.removeLayer(f);\n  }\n\n  show_hide_layer_group (lg) {\n    lg.show ? this.map.addLayer(lg.feature_group) : this.map.removeLayer(lg.feature_group);\n  }\n\n  select_active_layer_group(lg) {\n    this.map.removeControl(this.drawControl);\n    this.add_draw_controls(lg.feature_group);\n    this.active_layer_group = lg;\n    lg.active = true;\n    lg.show = true;\n  }\n\n\n\n  select_feature(lg, feature) {\n    this.active_layer_group = lg;\n    this.current_layer == feature ? this.current_layer = null : this.current_layer = feature;\n  }\n\n  create_new_project () {\n    let modal = this.$uibModal.open({\n      templateUrl: \"/static/designsafe/apps/geo/html/confirm-new-modal.html\",\n      controller: \"ConfirmClearModalCtrl as vm\",\n    });\n    modal.result.then( (s) => {\n      this.map.eachLayer(function (layer) {\n        console.log(layer);\n        // this.map.removeLayer(layer);\n      });\n      this.project.clear();\n      let p = new MapProject('New Map');\n      p.layer_groups = [new LayerGroup('New Group', new L.FeatureGroup())];\n      this.project = p;\n      this.active_layer_group = this.project.layer_groups[0];\n      this.map.addLayer(this.active_layer_group.feature_group);\n    });\n  }\n\n  zoom_to(feature) {\n    if (feature instanceof L.Marker) {\n       let latLngs = [ feature.getLatLng() ];\n       let markerBounds = L.latLngBounds(latLngs);\n       try {\n         this.map.fitBounds(markerBounds, {maxZoom: 16});\n        //  feature.getElement().style.border = '2px solid red';\n       } catch (e) {\n         console.log(e);\n       }\n    } else {\n      try {\n        this.map.fitBounds(feature.getBounds(), {maxZoom: 16});\n      } catch (e) {\n        console.log(e);\n      }\n    };\n  }\n\n  on_drop (ev, data, lg) {\n    let src_lg = this.project.layer_groups[data.pidx];\n    let feature = src_lg.feature_group.getLayers()[data.idx];\n    src_lg.feature_group.removeLayer(feature);\n    lg.feature_group.addLayer(feature);\n  }\n\n  update_layer_style (prop) {\n    let tmp = this.current_layer;\n    // debugger;\n    // this.current_layer.setStyle({prop: this.current_layer.options[prop]});\n    let styles = {};\n    styles[prop] = this.current_layer.options[prop];\n    if (tmp instanceof L.Marker) {\n        tmp.getElement().style.color = this.current_layer.options.fillColor;\n    } else {\n      this.current_layer.setStyle(styles);\n    }\n  }\n\n  update_feature(layer){\n    layer.update();\n  }\n\n  metadata_save(k, v, layer) {\n    if (!(layer.options.metadata)) {\n      layer.options.metadata = [];\n    }\n    layer.options.metadata.push({\n      'key':k,\n      'value':v\n    });\n    this.adding_metadata = false;\n    this.metadata_key = null;\n    this.metadata_value = null;\n  }\n\n  metadata_delete(idx, layer) {\n    layer.options.metadata.splice(idx, 1);\n  }\n\n\n  drop_feature_success (ev, data, lg) {\n    console.log(\"drag_feature_success\", ev, data, lg);\n  }\n\n  _load_data_success (retval) {\n    if (this.open_existing) {\n      if (retval instanceof MapProject) {\n        //clear off all the layers from the map\n        this.project.layer_groups.forEach( (lg) => {\n          this.map.removeLayer(lg.feature_group);\n        });\n\n        // set the project to be the return value\n        this.project = retval;\n        this._init_map_layers();\n        this.fit_map_to_project();\n      } else {\n        this.toastr.error('Load failed! File was not compatible');\n      }\n      this.open_existing = false;\n    } else if (retval instanceof MapProject) {\n      retval.layer_groups.forEach( (lg) => {\n        this.project.layer_groups.push(lg);\n        this.map.addLayer(lg.feature_group);\n      });\n      this.active_layer_group = this.project.layer_groups[0];\n      this.fit_map_to_project();\n    } else {\n\n      if (this.project.layer_groups.length == 0) {\n        this.project.layer_groups = [new LayerGroup('New Group', new L.FeatureGroup())];\n        this.active_layer_group = this.project.layer_groups[0];\n        this.map.addLayer(this.project.layer_groups[0].feature_group);\n      }\n      //it will be an array of features...\n      retval.forEach( (f) => {\n        this.active_layer_group.feature_group.addLayer(f);\n      });\n      this.fit_map_to_project();\n    }\n  }\n\n  open_existing_locally () {\n    this.open_existing = true;\n    this.open_file_dialog();\n  }\n\n  open_existing_from_depot() {\n    this.open_existing = true;\n    this.open_db_modal();\n  }\n\n  open_db_modal () {\n    let modal = this.$uibModal.open({\n      templateUrl: \"/static/designsafe/apps/geo/html/db-modal.html\",\n      controller: \"DBModalCtrl as vm\",\n      resolve: {\n        filename: ()=> {return null;}\n      }\n    });\n    modal.result.then( (f, saveas) => {this.load_from_data_depot(f);});\n  }\n\n  open_image_preview_modal (href) {\n    let modal = this.$uibModal.open({\n      templateUrl: \"/static/designsafe/apps/geo/html/image-preview-modal.html\",\n      controller: \"ImagePreviewModal as vm\",\n      size: 'lg',\n      resolve: {\n        marker: ()=> {return this.active_image_marker;}\n      }\n    });\n    modal.result.then( (f, saveas) => {this.load_from_data_depot(f);});\n  }\n\n  open_settings_modal () {\n    let modal = this.$uibModal.open({\n      templateUrl: \"/static/designsafe/apps/geo/html/settings-modal.html\",\n      controller: \"SettingsModalCtrl as vm\",\n    });\n    modal.result.then( (s) => {\n      this.settings = this.GeoSettingsService.settings;\n\n    });\n  }\n\n  open_image_overlay_modal () {\n    let modal = this.$uibModal.open({\n      templateUrl: \"/static/designsafe/apps/geo/html/image-overlay-modal.html\",\n      controller: \"ImageOverlayModalCtrl as vm\",\n    });\n    modal.result.then( (res) => {\n      let bounds;\n      bounds = [\n        [res.min_lat, res.min_lon],\n        [res.max_lat, res.max_lon]\n      ];\n      if (res.file) {\n        this.GeoDataService.read_file_as_data_url(res.file).then( (data) => {\n          console.log(data);\n        });\n      }\n      let overlay = L.imageOverlay(res.url, bounds).addTo(this.map);\n      console.log(overlay);\n    });\n  }\n\n  open_file_dialog () {\n    this.$timeout(() => {\n      $('#file_picker').click();\n    }, 0);\n  }\n\n  load_from_data_depot(f) {\n    this.loading = true;\n    this.GeoDataService.load_from_data_depot(f.selected)\n      .then(\n      (retval) =>{\n        this._load_data_success(retval);\n        this.loading = false;\n      },\n      (err)=> {\n        this.toastr.error('Load failed!');\n        this.loading = false;\n        this.open_existing = false;\n      });\n  }\n\n  local_file_selected (ev) {\n    this.loading = true;\n    let reqs = [];\n    for (let i=0; i<ev.target.files.length; i++) {\n      // debugger\n      let file = ev.target.files[i];\n      let prom = this.GeoDataService.load_from_local_file(file).then( (retval) =>{return this._load_data_success(retval);});\n      reqs.push(prom);\n      // this.loading = false;\n    };\n    this.$q.all(reqs).then( ()=>{\n      this.loading = false;\n      //reset the picker\n      $('#file_picker').val('');\n      this.toastr.success('Imported file');\n    }, (rej)=>{\n      this.loading = false;\n      this.toastr.error('Load failed!');\n    }).then( () => {\n\n    });\n  }\n\n  save_locally () {\n    this.GeoDataService.save_locally(this.project);\n  }\n\n  save_to_depot () {\n    let modal = this.$uibModal.open({\n      templateUrl: \"/static/designsafe/apps/geo/html/db-modal.html\",\n      controller: \"DBModalCtrl as vm\",\n      resolve: {\n        filename: ()=> {return this.project.name + '.geojson';}\n      }\n    });\n    modal.result.then( (res) => {\n      let newname = res.saveas;\n      this.project.name = newname.split('.')[0];\n      res.selected.name = res.saveas;\n      this.loading = true;\n      this.GeoDataService.save_to_depot(this.project, res.selected).then( (resp) => {\n        this.loading = false;\n        this.toastr.success('Saved to data depot');\n      }, (err) => {\n        this.toastr.error('Save failed!');\n        this.loading = false;\n      });\n    }, (rej)=> {\n      this.loading = false;\n    });\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/controllers/map-sidebar.js","export default class SettingsModalCtrl {\n\n  constructor ($scope, $uibModalInstance, GeoSettingsService) {\n    'ngInject';\n    this.$scope = $scope;\n    this.$uibModalInstance = $uibModalInstance;\n    this.GeoSettingsService = GeoSettingsService;\n    this.settings = GeoSettingsService.settings;\n  }\n\n  ok () {\n    this.GeoSettingsService.settings = this.settings;\n    this.$uibModalInstance.close(this.settings);\n  };\n\n  // cancel () {\n  //   this.$uibModalInstance.dismiss('cancel');\n  // };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/controllers/settings-modal.js","export default function customOnChange() {\n  return {\n    restrict: 'A',\n    scope: {\n      handler: '&'\n    },\n    link: function (scope, element, attrs) {\n      element.on('change', function (ev) {\n        scope.$apply(function(){\n          scope.handler({ev:ev});\n        });\n      });\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/directives/custom-on-change.js","import * as GeoUtils from '../utils/geo-utils';\nimport LayerGroup from '../models/layer_group';\nimport MapProject from '../models/map-project';\n\n\nexport default class GeoDataService {\n\n  constructor ($http, $q, $rootScope, UserService, GeoSettingsService) {\n    'ngInject';\n    this.$http = $http;\n    this.$q = $q;\n    this.$rootScope = $rootScope;\n    this.UserService = UserService;\n    this.GeoSettingsService = GeoSettingsService;\n    this.active_project = null;\n    this.previous_project_state = null;\n    this.HazmapperDivIcon = L.divIcon({\n      className: 'hm-marker',\n      html: \"<div> <i class='fa fa-map-marker'> </i> </div>\"\n    });\n  }\n\n  current_project(project) {\n    if (!(project)) {\n      return this.active_project;\n    }\n    this.active_project = project;\n  }\n\n  _resize_image (blob, max_width=400, max_height=400) {\n    return this.$q( (res, rej) => {\n      let base64 = this._arrayBufferToBase64(blob);\n      // Create and initialize two canvas\n      let canvas = document.createElement(\"canvas\");\n      let ctx = canvas.getContext(\"2d\");\n      let canvasCopy = document.createElement(\"canvas\");\n      let copyContext = canvasCopy.getContext(\"2d\");\n\n      // Create original image\n      let img = new Image();\n      img.src = base64;\n      img.onload = ()=>{\n        // Determine new ratio based on max size\n        let ratio = 1;\n        if(img.width > max_width) {\n          ratio = max_width / img.width;\n        } else if(img.height > max_height) {\n          ratio = max_height / img.height;\n        }\n        // Draw original image in second canvas\n        canvasCopy.width = img.width;\n        canvasCopy.height = img.height;\n        copyContext.drawImage(img, 0, 0);\n\n        // Copy and resize second canvas to first canvas\n        canvas.width = img.width * ratio;\n        canvas.height = img.height * ratio;\n        ctx.drawImage(canvasCopy, 0, 0, canvasCopy.width, canvasCopy.height, 0, 0, canvas.width, canvas.height);\n        res(canvas.toDataURL('image/jpeg', 0.8));\n      };\n    });\n  }\n\n  _arrayBufferToBase64( buffer ) {\n    let binary = '';\n    let bytes = new Uint8Array( buffer );\n    let len = bytes.byteLength;\n    for (let i = 0; i < len; i++) {\n        binary += String.fromCharCode( bytes[ i ] );\n    }\n    let encoded =  btoa( binary );\n    return 'data:image/jpg;base64,' + encoded;\n  }\n\n  _from_kml(text_blob) {\n    return this.$q( (res, rej) => {\n      let features = [];\n      let l = omnivore.kml.parse(text_blob);\n      l.getLayers().forEach((d) => {\n        // d.feature.properties = {};\n        d.options.label = d.feature.properties.name;\n        features.push(d);\n      });\n      res(features);\n    });\n  }\n\n  _from_kmz (blob) {\n    return this.$q( (res, rej) => {\n      let zipper = new JSZip();\n      zipper.loadAsync(blob).then( (zip) => {\n        //loop over all the files in the archive\n        let proms = [];\n        for (let key in zip.files) {\n          let ext = key.split('.').pop();\n          if (ext === 'kml') {\n            return zip.files[key].async('text');\n          }\n        }\n      }).then( (txt) => {\n        let features = this._from_kml(txt);\n        res(features);\n      });\n    });\n  }\n\n  _from_json (blob) {\n    return this.$q( (res, rej) => {\n      if (blob.ds_map) return res(this._from_dsmap(blob));\n      try {\n        let features = [];\n        let options = {\n          pointToLayer: (feature, latlng)=> {\n            return L.marker(latlng, {icon: this.HazmapperDivIcon});\n          }\n        };\n        L.geoJSON(blob, options).getLayers().forEach( (layer) => {\n\n\n          let props = layer.feature.properties;\n          if ((layer instanceof L.Marker) && (layer.feature.properties.image_src)) {\n            let latlng = layer.getLatLng();\n            layer = this._make_image_marker(latlng.lat, latlng.lng, props.thumb_src, props.image_src, props.href);\n            // feat.options.image_src = feat.feature.properties.image_src;\n            // feat.options.thumb_src = feat.feature.properties.thumb_src;\n          }\n          for (let key in props) {\n            layer.options[key] = props[key];\n          }\n\n          features.push(layer);\n        });\n        res(features);\n      } catch (e) {\n        rej('Bad geoJSON');\n      }\n    });\n  }\n\n  _from_gpx (blob) {\n    return this.$q( (res, rej) => {\n      // console.log(text_blob)\n      let features = [];\n      let l = omnivore.gpx.parse(blob);\n      l.getLayers().forEach((d) => {\n        features.push(d);\n      });\n      res(features);\n    });\n  }\n\n  _make_image_marker (lat, lon, thumb, preview, href=null) {\n    let icon = L.divIcon({\n      iconSize: [40, 40],\n      html: \"<div class='image' style='background:url(\" + thumb + \");background-size: 100% 100%'></div>\",\n      className: 'leaflet-marker-photo'\n    });\n\n    let tmpl = \"<img src=\" + preview + \">\";\n\n    let marker = L.marker([lat, lon], {icon: icon})\n          .bindPopup(tmpl,\n              {\n                className: 'leaflet-popup-photo',\n                maxWidth: \"auto\",\n                // maxHeight: 400\n              });\n    marker.on('popupopen', (e)=> {\n      this.$rootScope.$broadcast(\"image_popupopen\", marker);\n    });\n    marker.on('popupclose', (e)=> {\n      this.$rootScope.$broadcast(\"image_popupclose\", marker);\n    });\n    marker.options.image_src = preview;\n    marker.options.thumb_src = thumb;\n    marker.options.href = href;\n    return marker;\n  }\n\n  _from_image (file, fname, agave_file=null) {\n    return this.$q( (res, rej) => {\n      try {\n        let exif = EXIF.readFromBinaryFile(file);\n        let lat = exif.GPSLatitude;\n        let lon = exif.GPSLongitude;\n        //Convert coordinates to WGS84 decimal\n        let latRef = exif.GPSLatitudeRef || \"N\";\n        let lonRef = exif.GPSLongitudeRef || \"W\";\n        lat = (lat[0] + lat[1]/60 + lat[2]/3600) * (latRef == \"N\" ? 1 : -1);\n        lon = (lon[0] + lon[1]/60 + lon[2]/3600) * (lonRef == \"W\" ? -1 : 1);\n        if ((lat > 90) || (lat < -90) || (lon > 360) || (lon < -360)) {\n          rej('Bad EXIF GPS data');\n        }\n        let thumb = null;\n        let preview = null;\n        this._resize_image(file, 100, 100).then( (resp)=>{\n          thumb = resp;\n        }).then( ()=>{\n          return this._resize_image(file, 300, 300);\n        }).then( (resp)=>{\n          preview = resp;\n          let marker = this._make_image_marker(lat, lon, thumb, preview, null);\n          if (agave_file) {\n            marker.options.href = agave_file._links.self.href;\n            marker.options.label = agave_file.name;\n          } else {\n            marker.options.label = fname;\n          }\n          res([marker]);\n        });\n      } catch (e) {\n        rej(e);\n      }\n    });\n  }\n\n\n  _from_dsmap (json) {\n    return this.$q( (res, rej) => {\n      // if (json instanceof String) {\n      let project = new MapProject();\n      let options = {\n        pointToLayer: (feature, latlng)=> {\n            return L.marker(latlng, {icon: this.HazmapperDivIcon});\n        }\n      };\n      project.name = json.name;\n      project.description = json.description;\n      json.layer_groups.forEach( (name) => {\n        project.layer_groups.push(new LayerGroup(name, new L.FeatureGroup()));\n      });\n      json.features.forEach( (d)=> {\n        let feature = L.geoJSON(d, options);\n        feature.eachLayer( (layer)=> {\n          // If there were no styles applied, it might be transparent???\n          if (!(layer.feature.properties.color)) {\n           layer.feature.properties.color = '#ff0000';\n          };\n          if (!(layer.feature.properties.fillColor)) {\n            layer.feature.properties.fillColor = '#ff0000';\n          };\n          if (!(layer.feature.properties.opacity)) {\n            layer.feature.properties.opacity = 1.0;\n          };\n\n          let props = layer.feature.properties;\n\n          try {\n            let styles = {\n              fillColor: layer.feature.properties.fillColor,\n              color: layer.feature.properties.color,\n              opacity: layer.feature.properties.opacity\n            };\n            layer.setStyle(styles);\n          } catch (e) {\n            // this can get caught for marker type objects, which for some reason\n            // do not have a setStyle() method\n            console.log(e);\n          }\n\n          let layer_group_index = d.layer_group_index;\n          if ((layer instanceof L.Marker) && (layer.feature.properties.image_src)) {\n            let latlng = layer.getLatLng();\n            layer = this._make_image_marker(latlng.lat, latlng.lng, layer.feature.properties.thumb_src, layer.feature.properties.image_src, layer.feature.properties.original_src);\n            // feat.options.image_src = feat.feature.properties.image_src;\n            // feat.options.thumb_src = feat.feature.properties.thumb_src;\n          }\n\n          // Add in the properties that were on the feature\n          for (let key in props) {\n            layer.options[key] = props[key];\n          }\n\n          project.layer_groups[layer_group_index].feature_group.addLayer(layer);\n          // layer.options.label = d.properties.label;\n        });\n\n      });\n      res(project);\n    });\n  }\n\n  read_file_as_data_url(file) {\n\n    let reader = new FileReader();\n    return this.$q( (res, rej) => {\n      reader.readAsDataURL(file);\n\n      reader.onload = (e) => {\n        return res(reader.result);\n      };\n    });\n  }\n\n  /*\n  This will return a promise that resolves to an array of features\n  that can be added to a LayerGroup\n  */\n  load_from_local_file (file) {\n    return this.$q( (res, rej) => {\n      let ext = GeoUtils.get_file_extension(file.name);\n      let reader = new FileReader();\n      //\n      if ((ext === 'kmz') || (ext === 'jpeg') || (ext === 'jpg')){\n        reader.readAsArrayBuffer(file);\n      } else {\n        reader.readAsText(file);\n      }\n      reader.onload = (e) => {\n        let p = null;\n        switch (ext) {\n          case 'kml':\n            p =  this._from_kml(e.target.result);\n            break;\n          case 'json':\n            p = this._from_json(JSON.parse(e.target.result));\n            break;\n          case 'geojson':\n            p = this._from_json(JSON.parse(e.target.result));\n            break;\n          case 'kmz':\n            p = this._from_kmz(e.target.result);\n            break;\n          case 'gpx':\n            p = this._from_gpx(e.target.result);\n            break;\n          case 'jpeg':\n            p = this._from_image(e.target.result, file.name);\n            break;\n          case 'jpg':\n            p = this._from_image(e.target.result, file.name);\n            break;\n          case 'dsmap':\n            p = this._from_dsmap(JSON.parse(e.target.result));\n            break;\n          default:\n            p = this._from_json(JSON.parse(e.target.result));\n        }\n        return res(p);\n      };\n    });\n  }\n\n  //\n  // @param f: a file from DataService\n  // returns a promise with the LayerGroup\n  load_from_data_depot(f) {\n    let ext = GeoUtils.get_file_extension(f.name);\n    let responseType = 'text';\n    if ((ext === 'kmz') || (ext === 'jpg') || (ext === 'jpeg')) {\n      responseType = 'arraybuffer';\n    }\n    return this.$http.get(f.agaveUrl(), {'responseType': responseType}).then((resp) => {\n      let p = null;\n      switch (ext) {\n        case 'kml':\n          p =  this._from_kml(resp.data);\n          break;\n        case 'json':\n          p = this._from_json(resp.data);\n          break;\n        case 'geojson':\n          p = this._from_json(resp.data);\n          break;\n        case 'kmz':\n          p = this._from_kmz(resp.data);\n          break;\n        case 'gpx':\n          p = this._from_gpx(resp.data);\n          break;\n        case 'jpeg':\n          p = this._from_image(resp.data, f.name, f);\n          break;\n        case 'jpg':\n          p = this._from_image(resp.data, f.name, f);\n          break;\n        case 'dsmap':\n          p = this._from_dsmap(resp.data);\n          break;\n        default:\n          p = this._from_json(resp.data);\n      }\n      return p;\n    });\n  }\n\n  save_locally (project) {\n    let gjson = project.to_json();\n    let blob = new Blob([JSON.stringify(gjson)], {type: \"application/json\"});\n    let url  = URL.createObjectURL(blob);\n\n    let a = document.createElement('a');\n    document.body.appendChild(a);\n    a.download    = project.name + \".geojson\";\n    a.href        = url;\n    a.textContent = \"Download\";\n    a.click();\n    document.body.removeChild(a);\n  }\n\n  //TODO Fix that hard coded URL?\n  save_to_depot (project, path) {\n    let form = new FormData();\n    let gjson = project.to_json();\n    let blob = new Blob([JSON.stringify(gjson)], {type: \"application/json\"});\n    let base_file_url = 'https://agave.designsafe-ci.org/files/v2/media/system/';\n    let post_url = base_file_url;\n    post_url = post_url + path.system;\n    let file = null;\n    if (path.type === 'dir') {\n      post_url = post_url + path.path;\n      file = new File([blob], path.name);\n      form.append('fileToUpload', file, path.name);\n    } else {\n      // A file was picked, so this WILL replace it\n      post_url = post_url + path.trail[path.trail.length-2].path;\n      file = new File([blob], path.name);\n      form.append('fileToUpload', file, path.name);\n    }\n    return this.$http.post(post_url, form, {headers: {'Content-Type': undefined}});\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/services/geo-data-service.js","export default class GeoSettingsService {\n\n  constructor () {\n    this.settings = {\n      default_marker_color: '#71c4ff',\n      default_fill_color: '#ff0000',\n      default_stroke_color: '#ff0000',\n      default_fill_opacity: 0.5,\n      measurement_units: 'si'\n    };\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/services/geo-settings-service.js","export default class GeoStateService {\n\n  constructor ($scope, $state) {\n    this.$scope = $scope;\n    this.$state = $state;\n    this.last_db_path = null;\n  }\n\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/services/geo-state-service.js","module.exports = L;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"L\"\n// module id = 17\n// module chunks = 0","import {mod as geo_directives} from './directives';\nimport {mod as geo_controllers} from './controllers';\nimport {mod as geo_services} from './services';\n\nlet mod = angular.module('designsafe');\nmod.requires.push('ui.router', 'ang-drag-drop', 'ds.geo.directives', 'ds.geo.controllers', 'ds.geo.services', 'toastr');\n\nfunction config($stateProvider, $uibTooltipProvider, $urlRouterProvider, $locationProvider, toastrConfig) {\n  'ngInject';\n\n  angular.extend(toastrConfig, {\n    timeOut: 1000\n  });\n\n  $locationProvider.html5Mode({\n    enabled: true\n  });\n\n  $stateProvider.state('geo', {\n    url: '',\n    abstract: true,\n    templateUrl: '/static/designsafe/apps/geo/html/index.html',\n    resolve: {\n      auth: function () {\n        return true;\n      }\n    }\n  }).state('geo.map', {\n    url: '/hazmapper',\n    templateUrl: '/static/designsafe/apps/geo/html/map.html',\n    controller: 'MapSidebarCtrl as vm'\n  }).state('geo.help', {\n    url: '/help',\n    templateUrl: '/static/designsafe/apps/geo/html/help.html',\n    controller: 'HelpCtrl as vm'\n  });\n  $urlRouterProvider.when('/', '/hazmapper');\n\n  //config popups etc\n  $uibTooltipProvider.options({popupDelay:1000});\n\n}\n\nmod.config(config);\n\nexport default mod;\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/index.js"],"sourceRoot":""}