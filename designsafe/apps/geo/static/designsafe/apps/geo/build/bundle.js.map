{"version":3,"sources":["webpack:///webpack/bootstrap 70dd38d9a1bc8f7faa77","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/controllers/db-modal.js","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/models/layer_group.js","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/models/map-project.js","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/utils/geo-utils.js","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/controllers/index.js","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/directives/index.js","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/services/index.js","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/controllers/confirm-clear-modal.js","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/controllers/help.js","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/controllers/map-sidebar.js","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/controllers/settings-modal.js","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/directives/custom-on-change.js","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/services/geo-data-service.js","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/services/geo-settings-service.js","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/services/geo-state-service.js","webpack:///external \"L\"","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/index.js"],"names":["DBModalCtrl","$scope","$uibModalInstance","filename","selected","saveas","dismiss","label","fg","feature_group","show","show_contents","getLayers","f","options","image_src","name","layer_groups","description","forEach","lg","clearLayers","bounds","push","getBounds","total","num_features","out","tmp","json","feature","toGeoJSON","opt_keys","indexOf","key","properties","features","get_file_extension","fname","split","pop","mod","controller","service","HelpCtrl","$window","$timeout","$interval","$q","$uibModal","toastr","DataService","$http","GeoDataService","GeoSettingsService","settings","streets","L","tileLayer","attribution","satellite","maxZoom","basemaps","map","layers","preferCanvas","mc","Control","Measure","addTo","control","zoomControl","setPosition","current_project","project","removeLayer","addLayer","fitBounds","get_bounds","e","console","invalidateSize","active_layer_group","add_draw_controls","object","color","default_stroke_color","fillOpacity","$apply","on","current_mouse_coordinates","position","draw","circle","edit","featureGroup","remove","addControl","dc","drawControl","layer","active","ev","select_active_layer_group","i","modal","templateUrl","result","then","s","clear","p","markerBounds","log","src_lg","retval","$","loading","load_from_data_depot","_load_data_success","error","reqs","file","target","prom","success","styles","prop","current_layer","res","save_to_depot","err","rej","SettingsModalCtrl","restrict","scope","handler","link","element","UserService","previous_project_state","active_project","blob","base64","canvas","document","createElement","ctx","getContext","copyContext","canvasCopy","img","Image","src","onload","width","max_width","ratio","max_height","height","drawImage","toDataURL","binary","String","fromCharCode","encoded","btoa","l","d","zipper","loadAsync","proms","ext","zip","files","async","txt","_from_kml","geoJSON","icon","divIcon","iconSize","html","className","marker","maxWidth","original_src","original","exif","EXIF","readFromBinaryFile","lon","GPSLongitude","latRef","lonRef","GPSLongitudeRef","lat","thumb","preview","_resize_image","resp","_make_image_marker","eachLayer","fillColor","opacity","layer_group_index","latlng","getLatLng","reader","FileReader","readAsText","_from_json","JSON","parse","_from_kmz","_from_gpx","_from_image","_from_dsmap","responseType","data","gjson","a","body","appendChild","download","href","url","textContent","removeChild","form","FormData","base_file_url","post_url","path","type","File","append","default_fill_color","default_fill_opacity","measurement_units","GeoStateService","$state","requires","config","$stateProvider","$uibTooltipProvider","timeOut","$locationProvider","html5Mode","enabled","resolve","auth","state","$urlRouterProvider","when"],"mappings":"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","file":"./designsafe/apps/geo/static/designsafe/apps/geo/build/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 16);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 70dd38d9a1bc8f7faa77","export default class DBModalCtrl {\n\n  constructor ($scope, $uibModalInstance, filename) {\n    'ngInject';\n    this.$scope = $scope;\n    this.$uibModalInstance = $uibModalInstance;\n    this.selected = null;\n    this.saveas = {filename: filename};\n  }\n\n  ok () {\n    this.$uibModalInstance.close({selected:this.selected, saveas:this.saveas.filename});\n  };\n\n  cancel () {\n    this.$uibModalInstance.dismiss('cancel');\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/controllers/db-modal.js","export default class LayerGroup {\n\n  constructor (label, fg) {\n    this.label = label;\n    this.feature_group = fg;\n    this.show = true;\n    this.show_contents = true;\n  }\n\n  num_features () {\n    return this.feature_group.getLayers().length;\n  }\n\n  get_feature_type (f) {\n    if (f.options.image_src) {\n      return 'Image';\n    } else if (f instanceof L.Marker) {\n      return 'Point';\n    } else if (f instanceof L.Polygon) {\n      return 'Polygon';\n    } else {\n      return 'Path';\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/models/layer_group.js","import L from 'L';\n\nexport default class MapProject {\n\n  constructor (name) {\n    this.name = name;\n    this.layer_groups = [];\n    this.description = null;\n  }\n\n  clear() {\n    this.layer_groups.forEach( (lg) => {\n      lg.feature_group.clearLayers();\n    });\n  }\n\n  get_bounds() {\n    let bounds = [];\n    this.layer_groups.forEach( (lg) => {\n      bounds.push(lg.feature_group.getBounds());\n    });\n    return bounds;\n  }\n\n  num_features () {\n    total = 0;\n    this.layer_groups.forEach( (lg) => {\n      total += lg.num_features();\n    });\n  }\n\n  to_json() {\n    let out = {\n      \"type\": \"FeatureCollection\",\n      \"features\": [],\n      \"ds_map\": true,\n      \"name\": this.name,\n      \"description\": this.description,\n      \"num_layers\": this.layer_groups.length,\n      \"layer_groups\": []\n    };\n    this.layer_groups.forEach( (lg, lg_idx) => {\n      out.layer_groups.push(lg.label);\n      let tmp = {\n        \"type\": \"FeatureCollection\",\n        \"features\": [],\n        \"label\": lg.label\n      };\n      lg.feature_group.getLayers().forEach( (feature) => {\n        let json = feature.toGeoJSON();\n        // These are all the keys in the options object that we need to\n        // re-create the layers in the application after loading.\n        let opt_keys = [\n          'label',\n          'color',\n          'fillColor',\n          'fillOpacity',\n          'description',\n          'image_src',\n          'thumb_src',\n          'original_src',\n        ];\n\n        // //add in any options\n        // if (feature.options.image_src) {\n        //   json.properties.image_src = feature.options.image_src;\n        // }\n        // if (feature.options.thumb_src) {\n        //   json.properties.thumb_src = feature.options.thumb_src;\n        // }\n        for (let key in feature.options) {\n          if (opt_keys.indexOf(key) !== -1) {\n            json.properties[key] = feature.options[key];\n          }\n        };\n        json.layer_group_index = lg_idx;\n        out.features.push(json);\n      });\n    });\n    return out;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/models/map-project.js","export function get_file_extension (fname) {\n  return fname.split('.').pop();\n}\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/utils/geo-utils.js","import MapSidebarCtrl from './map-sidebar';\nimport DBModalCtrl from './db-modal';\nimport HelpCtrl from './help';\nimport SettingsModalCtrl from './settings-modal';\nimport ConfirmClearModalCtrl from './confirm-clear-modal';\n\nlet mod = angular.module('ds.geo.controllers', []);\n\nmod.controller('MapSidebarCtrl', MapSidebarCtrl);\nmod.controller('DBModalCtrl', DBModalCtrl);\nmod.controller('HelpCtrl', HelpCtrl);\nmod.controller('SettingsModalCtrl', SettingsModalCtrl);\nmod.controller('ConfirmClearModalCtrl', ConfirmClearModalCtrl);\n\nexport default mod;\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/controllers/index.js","import customOnChange from './custom-on-change';\n\nlet mod = angular.module('ds.geo.directives', []);\n\n\nmod.directive('customOnChange', customOnChange);\nexport default mod;\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/directives/index.js","// import customOnChange from './custom-on-change';\nimport GeoStateService from './geo-state-service';\nimport GeoDataService from './geo-data-service';\nimport GeoSettingsService from './geo-settings-service';\n\nlet mod = angular.module('ds.geo.services', []);\nmod.service('GeoStateService', GeoStateService);\nmod.service('GeoDataService', GeoDataService);\nmod.service('GeoSettingsService', GeoSettingsService);\n\n// mod.directive('customOnChange', customOnChange);\n\nexport default mod;\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/services/index.js","export default class ConfirmClearModalCtrl {\n\n  constructor ($scope, $uibModalInstance, GeoSettingsService) {\n    'ngInject';\n    this.$scope = $scope;\n    this.$uibModalInstance = $uibModalInstance;\n  }\n\n  ok () {\n    this.$uibModalInstance.close('ok');\n  };\n\n  cancel () {\n    this.$uibModalInstance.dismiss('cancel');\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/controllers/confirm-clear-modal.js","export default class HelpCtrl {\n\n  constructor ($scope) {\n    'ngInject';\n    this.$scope = $scope;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/controllers/help.js","import LayerGroup from '../models/layer_group';\nimport MapProject from '../models/map-project';\nimport DBModalCtrl from './db-modal';\nimport * as GeoUtils from '../utils/geo-utils';\n\nexport default class MapSidebarCtrl {\n\n  constructor ($scope, $window, $timeout, $interval, $q, $uibModal, toastr, DataService, $http, GeoDataService, GeoSettingsService) {\n    'ngInject';\n    this.$scope = $scope;\n    this.LGeo = $window.LGeo;\n    this.$timeout = $timeout;\n    this.$interval = $interval;\n    this.$window = $window;\n    this.$q = $q;\n    this.$uibModal = $uibModal;\n    this.DataService = DataService;\n    this.$http = $http;\n    this.GeoDataService = GeoDataService;\n    this.GeoSettingsService = GeoSettingsService;\n    this.toastr = toastr;\n\n    this.settings = this.GeoSettingsService.settings;\n\n    //method binding for callback, sigh...\n    this.local_file_selected = this.local_file_selected.bind(this);\n    // this.open_db_modal = this.open_db_modal.bind(this);\n\n    let streets = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n    });\n\n    let satellite = L.tileLayer(\n      'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {\n      attribution: '&copy;',\n      maxZoom: 20,\n    });\n\n    let basemaps = {\n      'Street': streets,\n      'Satellite': satellite\n    };\n    this.map = L.map('geo_map', {\n        layers: [streets, satellite],\n        preferCanvas: false\n      }).setView([0, 0], 3);\n    let mc = new L.Control.Measure({primaryLengthUnit:'meters', primaryAreaUnit: 'meters'});\n    mc.addTo(this.map);\n    L.control.layers(basemaps).addTo(this.map);\n    this.map.zoomControl.setPosition('bottomleft');\n\n    // this.$scope.$watch(()=>{return this.current_layer;}, (newval, oldval)=>{console.log(newval);});\n\n    if (this.GeoDataService.current_project()) {\n      this.project = this.GeoDataService.current_project();\n      this.project.layer_groups.forEach( (lg)=>{\n        this.map.addLayer(lg.feature_group);\n        this.map.removeLayer(lg.feature_group);\n        this.map.addLayer(lg.feature_group);\n      });\n      try {\n        this.map.fitBounds(this.project.get_bounds(), {maxZoom: 16});\n      } catch (e) {\n        console.log('get_bounds fail', e);\n      }\n    } else {\n      this.project = new MapProject('New Map');\n      this.project.layer_groups = [new LayerGroup('New Group', new L.FeatureGroup())];\n      this.map.addLayer(this.project.layer_groups[0].feature_group);\n    }\n\n    // this._add_click_handlers();\n\n    // trick to fix the tiles that sometimes don't load for some reason...\n    $timeout( () => {this.map.invalidateSize();}, 10);\n\n    // init an active layer group\n    this.active_layer_group = this.project.layer_groups[0];\n\n    // Auto keep track of current project in the GeoDataService\n    // so that if they switch states they will not lose work...\n    $interval( () => {\n      this.GeoDataService.current_project(this.project);\n    }, 1000);\n\n\n    this.add_draw_controls(this.active_layer_group.feature_group);\n\n    this.map.on('draw:created',  (e) => {\n      let object = e.layer;\n      object.options.color = this.settings.default_stroke_color;\n      object.options.fillColor = this.settings.default_fill_color;\n      object.options.fillOpacity = this.settings.default_fill_opacity;\n      this.active_layer_group.feature_group.addLayer(object);\n      this.$scope.$apply();\n    });\n\n    this.map.on('mousemove', (e) => {\n      this.current_mouse_coordinates = e.latlng;\n      this.$scope.$apply();\n    });\n\n\n  } // end constructor\n\n  add_draw_controls (fg) {\n    let dc = new L.Control.Draw({\n      position: 'topright',\n      draw: {\n        circle: false,\n      },\n      edit: {\n       featureGroup: fg,\n       remove: true\n      }\n    });\n    this.map.addControl(dc);\n    this.drawControl = dc;\n  }\n\n  feature_click (layer) {\n    console.log(layer);\n  }\n\n  // Adds click handlers to map elements. This does NOT feel\n  // right to me...\n  _add_click_handlers () {\n    this.project.layer_groups.forEach( (lg) => {\n      lg.feature_group.on('click', (ev)=> {\n        this.project.layer_groups.forEach( (lg) => {\n          lg.feature_group.getLayers().forEach( (layer)=>{\n            layer.active = false;\n            if (layer == ev.layer) {\n              layer.active = true;\n            }\n          });\n        });\n      });\n    });\n  }\n\n  create_layer_group () {\n    let lg = new LayerGroup(\"New Group\", new L.FeatureGroup());\n    this.project.layer_groups.push(lg);\n    this.active_layer_group = this.project.layer_groups[this.project.layer_groups.length -1];\n    this.map.addLayer(lg.feature_group);\n    this.select_active_layer_group(this.active_layer_group);\n  }\n\n  delete_layer_group (lg, i) {\n    this.map.removeLayer(lg.feature_group);\n    this.project.layer_groups.splice(i, 1);\n    this.active_layer_group = this.project.layer_groups[0];\n  }\n\n  delete_feature (lg, f) {\n    this.map.removeLayer(f);\n    lg.feature_group.removeLayer(f);\n  }\n\n  show_hide_layer_group (lg) {\n    lg.show ? this.map.addLayer(lg.feature_group) : this.map.removeLayer(lg.feature_group);\n  }\n\n  select_active_layer_group(lg) {\n    this.map.removeControl(this.drawControl);\n    this.add_draw_controls(lg.feature_group);\n    this.active_layer_group = lg;\n    lg.active = true;\n    lg.show = true;\n  }\n\n  select_feature(lg, feature) {\n    this.active_layer_group = lg;\n    this.current_layer == feature ? this.current_layer = null : this.current_layer = feature;\n  }\n\n  create_new_project () {\n    let modal = this.$uibModal.open({\n      templateUrl: \"/static/designsafe/apps/geo/html/confirm-new-modal.html\",\n      controller: \"ConfirmClearModalCtrl as vm\",\n    });\n    modal.result.then( (s) => {\n      this.project.clear();\n      let p = new MapProject('New Map');\n      p.layer_groups = [new LayerGroup('New Group', new L.FeatureGroup())];\n      this.project = p;\n      this.active_layer_group = this.project.layer_groups[0];\n      this.map.addLayer(this.active_layer_group.feature_group);\n    });\n  }\n\n  zoom_to(feature) {\n    if (feature instanceof L.Marker) {\n       let latLngs = [ feature.getLatLng() ];\n       let markerBounds = L.latLngBounds(latLngs);\n       try {\n         this.map.fitBounds(markerBounds, {maxZoom: 16});\n       } catch (e) {\n         console.log(e);\n       }\n    } else {\n      try {\n        this.map.fitBounds(feature.getBounds(), {maxZoom: 16});\n      } catch (e) {\n        console.log(e);\n      }\n    };\n  }\n\n  on_drop (ev, data, lg) {\n    let src_lg = this.project.layer_groups[data.pidx];\n    let feature = src_lg.feature_group.getLayers()[data.idx];\n    src_lg.feature_group.removeLayer(feature);\n    lg.feature_group.addLayer(feature);\n  }\n\n  drop_feature_success (ev, data, lg) {\n    console.log(\"drag_feature_success\", ev, data, lg);\n  }\n\n  _load_data_success (retval) {\n    if (retval instanceof MapProject) {\n\n      retval.layer_groups.forEach( (lg) => {\n        this.project.layer_groups.push(lg);\n        this.map.addLayer(lg.feature_group);\n      });\n      this.active_layer_group = this.project.layer_groups[0];\n      try {\n        this.map.fitBounds(this.project.get_bounds());\n      } catch (e) {\n        console.log(e);\n      }\n    } else {\n\n      if (this.project.layer_groups.length == 0) {\n        this.project.layer_groups = [new LayerGroup('New Group', new L.FeatureGroup())];\n        this.active_layer_group = this.project.layer_groups[0];\n        this.map.addLayer(this.project.layer_groups[0].feature_group);\n      }\n      //it will be an array of features...\n      retval.forEach( (f) => {\n        this.active_layer_group.feature_group.addLayer(f);\n      });\n      try {\n        this.map.fitBounds(this.active_layer_group.feature_group.getBounds(), {maxZoom: 16});\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }\n\n  open_db_modal () {\n    let modal = this.$uibModal.open({\n      templateUrl: \"/static/designsafe/apps/geo/html/db-modal.html\",\n      controller: \"DBModalCtrl as vm\",\n      resolve: {\n        filename: ()=> {return null;}\n      }\n    });\n    modal.result.then( (f, saveas) => {this.load_from_data_depot(f);});\n  }\n\n  open_settings_modal () {\n    let modal = this.$uibModal.open({\n      templateUrl: \"/static/designsafe/apps/geo/html/settings-modal.html\",\n      controller: \"SettingsModalCtrl as vm\",\n    });\n    modal.result.then( (s) => {\n      this.settings = this.GeoSettingsService.settings;\n    });\n  }\n\n  open_file_dialog () {\n    this.$timeout(() => {\n      $('#file_picker').click();\n    }, 0);\n  }\n\n  load_from_data_depot(f) {\n    this.loading = true;\n    this.GeoDataService.load_from_data_depot(f)\n      .then(\n      (retval) =>{\n        this._load_data_success(retval);},\n      (err)=> {\n        this.toastr.error('Load failed!');\n        this.loading = false;\n      });\n  }\n\n  local_file_selected (ev) {\n    this.loading = true;\n    let reqs = [];\n    for (let i=0; i<ev.target.files.length; i++) {\n      // debugger\n      let file = ev.target.files[i];\n      let prom = this.GeoDataService.load_from_local_file(file).then( (retval) =>{return this._load_data_success(retval);});\n      reqs.push(prom);\n      // this.loading = false;\n    };\n    this.$q.all(reqs).then( ()=>{\n      this.loading = false;\n      //reset the picker\n      $('#file_picker').val('');\n    }).then( () => {\n      this.toastr.success('Imported file');\n    });\n  }\n\n  update_layer_style (prop) {\n    let tmp = this.current_layer;\n    // debugger;\n    // this.current_layer.setStyle({prop: this.current_layer.options[prop]});\n    let styles = {};\n    styles[prop] = this.current_layer.options[prop];\n    this.current_layer.setStyle(styles);\n  }\n\n  save_locally () {\n    this.GeoDataService.save_locally(this.project);\n  }\n\n  save_to_depot () {\n    let modal = this.$uibModal.open({\n      templateUrl: \"/static/designsafe/apps/geo/html/db-modal.html\",\n      controller: \"DBModalCtrl as vm\",\n      resolve: {\n        filename: ()=> {return this.project.name + '.geojson';}\n      }\n    });\n    modal.result.then( (res) => {\n      let newname = res.saveas;\n      this.project.name = newname.split('.')[0];\n      res.selected.name = res.saveas;\n      this.loading = true;\n      this.GeoDataService.save_to_depot(this.project, res.selected).then( (resp) => {\n        this.loading = false;\n        this.toastr.success('Saved to data depot');\n      }, (err) => {\n        this.toastr.error('Save failed!');\n        this.loading = false;\n      });\n    }, (rej)=> {\n      this.loading = false;\n    });\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/controllers/map-sidebar.js","export default class SettingsModalCtrl {\n\n  constructor ($scope, $uibModalInstance, GeoSettingsService) {\n    'ngInject';\n    this.$scope = $scope;\n    this.$uibModalInstance = $uibModalInstance;\n    this.GeoSettingsService = GeoSettingsService;\n    this.settings = GeoSettingsService.settings;\n  }\n\n  ok () {\n    this.GeoSettingsService.settings = this.settings;\n    this.$uibModalInstance.close(this.settings);\n  };\n\n  // cancel () {\n  //   this.$uibModalInstance.dismiss('cancel');\n  // };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/controllers/settings-modal.js","export default function customOnChange() {\n  return {\n    restrict: 'A',\n    scope: {\n      handler: '&'\n    },\n    link: function (scope, element, attrs) {\n      element.on('change', function (ev) {\n        scope.$apply(function(){\n          scope.handler({ev:ev});\n        });\n      });\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/directives/custom-on-change.js","import * as GeoUtils from '../utils/geo-utils';\nimport LayerGroup from '../models/layer_group';\nimport MapProject from '../models/map-project';\n\n\nexport default class GeoDataService {\n\n  constructor ($http, $q, UserService) {\n    'ngInject';\n    this.$http = $http;\n    this.$q = $q;\n    this.UserService = UserService;\n    this.active_project = null;\n    this.previous_project_state = null;\n  }\n\n  current_project(project) {\n    if (!(project)) {\n      return this.active_project;\n    }\n    this.active_project = project;\n  }\n\n  _resize_image (blob, max_width=400, max_height=400) {\n    return this.$q( (res, rej) => {\n      let base64 = this._arrayBufferToBase64(blob);\n      // Create and initialize two canvas\n      let canvas = document.createElement(\"canvas\");\n      let ctx = canvas.getContext(\"2d\");\n      let canvasCopy = document.createElement(\"canvas\");\n      let copyContext = canvasCopy.getContext(\"2d\");\n\n      // Create original image\n      let img = new Image();\n      img.src = base64;\n      img.onload = ()=>{\n        // Determine new ratio based on max size\n        let ratio = 1;\n        if(img.width > max_width) {\n          ratio = max_width / img.width;\n        } else if(img.height > max_height) {\n          ratio = max_height / img.height;\n        }\n        // Draw original image in second canvas\n        canvasCopy.width = img.width;\n        canvasCopy.height = img.height;\n        copyContext.drawImage(img, 0, 0);\n\n        // Copy and resize second canvas to first canvas\n        canvas.width = img.width * ratio;\n        canvas.height = img.height * ratio;\n        ctx.drawImage(canvasCopy, 0, 0, canvasCopy.width, canvasCopy.height, 0, 0, canvas.width, canvas.height);\n        res(canvas.toDataURL());\n      };\n    });\n  }\n\n  _arrayBufferToBase64( buffer ) {\n    let binary = '';\n    let bytes = new Uint8Array( buffer );\n    let len = bytes.byteLength;\n    for (let i = 0; i < len; i++) {\n        binary += String.fromCharCode( bytes[ i ] );\n    }\n    let encoded =  btoa( binary );\n    return 'data:image/jpg;base64,' + encoded;\n  }\n\n  _from_kml(text_blob) {\n    return this.$q( (res, rej) => {\n      let features = [];\n      let l = omnivore.kml.parse(text_blob);\n      l.getLayers().forEach((d) => {\n        // d.feature.properties = {};\n        d.options.label = d.feature.properties.name;\n        features.push(d);\n      });\n      res(features);\n    });\n  }\n\n  _from_kmz (blob) {\n    return this.$q( (res, rej) => {\n      let zipper = new JSZip();\n      zipper.loadAsync(blob).then( (zip) => {\n        //loop over all the files in the archive\n        let proms = [];\n        for (let key in zip.files) {\n          let ext = key.split('.').pop();\n          if (ext === 'kml') {\n            return zip.files[key].async('text');\n          }\n        }\n      }).then( (txt) => {\n        let features = this._from_kml(txt);\n        res(features);\n      });\n    });\n  }\n\n  _from_json (blob) {\n    return this.$q( (res, rej) => {\n      if (blob.ds_map) return res(this._from_dsmap(blob));\n      let features = [];\n      L.geoJSON(blob).getLayers().forEach( (layer) => {\n        for (let key in layer.feature.properties) {\n          layer.options[key] = layer.feature.properties[key];\n        }\n        features.push(layer);\n      });\n      res(features);\n    });\n  }\n\n  _from_gpx (blob) {\n    return this.$q( (res, rej) => {\n      // console.log(text_blob)\n      let features = [];\n      let l = omnivore.gpx.parse(blob);\n      l.getLayers().forEach((d) => {\n        features.push(d);\n      });\n      res(features);\n    });\n  }\n\n  _make_image_marker (lat, lon, thumb, preview, original) {\n    let icon = L.divIcon({\n      iconSize: [40, 40],\n      html: \"<div class='image' style='background:url(\" + original + \");background-size: 100% 100%'></div>\",\n      className: 'leaflet-marker-photo'\n    });\n\n    let marker = L.marker([lat, lon], {icon: icon})\n          .bindPopup(\"<img src=\" + preview + \"><a target=blank onclick='window.open(this.href)' href=\" + original + \">full res</a>\",\n              {\n                className: 'leaflet-popup-photo',\n                maxWidth: \"auto\",\n                // maxHeight: 400\n              });\n    marker.options.image_src = preview;\n    marker.options.thumb_src = thumb;\n    marker.options.original_src = original;\n    return marker;\n  }\n\n  _from_image (file) {\n    return this.$q( (res, rej) => {\n      try {\n        let exif = EXIF.readFromBinaryFile(file);\n        let encoded = this._arrayBufferToBase64(file);\n        let lat = exif.GPSLatitude;\n        let lon = exif.GPSLongitude;\n        //Convert coordinates to WGS84 decimal\n        let latRef = exif.GPSLatitudeRef || \"N\";\n        let lonRef = exif.GPSLongitudeRef || \"W\";\n        lat = (lat[0] + lat[1]/60 + lat[2]/3600) * (latRef == \"N\" ? 1 : -1);\n        lon = (lon[0] + lon[1]/60 + lon[2]/3600) * (lonRef == \"W\" ? -1 : 1);\n\n        let thumb = null;\n        let preview = null;\n        this._resize_image(file, 100, 100).then( (resp)=>{\n          thumb = resp;\n        }).then( ()=>{\n          return this._resize_image(file, 400, 400);\n        }).then( (resp)=>{\n          preview = resp;\n          let marker = this._make_image_marker(lat, lon, thumb, preview, encoded);\n          res([marker]);\n        });\n      } catch (e) {\n        rej(e);\n      }\n    });\n  }\n\n\n  _from_dsmap (json) {\n    return this.$q( (res, rej) => {\n      // if (json instanceof String) {\n      let project = new MapProject();\n      project.name = json.name;\n      project.description = json.description;\n      json.layer_groups.forEach( (name) => {\n        project.layer_groups.push(new LayerGroup(name, new L.FeatureGroup()));\n      });\n      json.features.forEach( (d)=> {\n        let feature = L.geoJSON(d);\n        feature.eachLayer( (layer)=> {\n          for (let key in layer.feature.properties) {\n            layer.options[key] = layer.feature.properties[key];\n          }\n          try {\n            let styles = {\n              fillColor: layer.feature.properties.fillColor,\n              color: layer.feature.properties.color,\n              opacity: layer.feature.properties.opacity\n            };\n            layer.setStyle(styles);\n          } catch (e) {\n            // this can get caught for marker type objects, which for some reason\n            // do not have a setStyle() method\n            console.log(e);\n          }\n          let layer_group_index = d.layer_group_index;\n          if ((layer instanceof L.Marker) && (layer.feature.properties.image_src)) {\n            let latlng = layer.getLatLng();\n            layer = this._make_image_marker(latlng.lat, latlng.lng, layer.feature.properties.thumb_src, layer.feature.properties.image_src, layer.feature.properties.original_src);\n            // feat.options.image_src = feat.feature.properties.image_src;\n            // feat.options.thumb_src = feat.feature.properties.thumb_src;\n          }\n          project.layer_groups[layer_group_index].feature_group.addLayer(layer);\n          layer.options.label = d.properties.label;\n        });\n\n      });\n      res(project);\n    });\n  }\n\n  /*\n  This will return a promise that resolves to an array of features\n  that can be added to a LayerGroup\n  */\n  load_from_local_file (file) {\n    return this.$q( (res, rej) => {\n      let ext = GeoUtils.get_file_extension(file.name);\n      let reader = new FileReader();\n      //\n      if ((ext === 'kmz') || (ext === 'jpeg') || (ext === 'jpg')){\n        reader.readAsArrayBuffer(file);\n      } else {\n        reader.readAsText(file);\n      }\n      reader.onload = (e) => {\n        let p = null;\n        switch (ext) {\n          case 'kml':\n            p =  this._from_kml(e.target.result);\n            break;\n          case 'json':\n            p = this._from_json(JSON.parse(e.target.result));\n            break;\n          case 'geojson':\n            p = this._from_json(JSON.parse(e.target.result));\n            break;\n          case 'kmz':\n            p = this._from_kmz(e.target.result);\n            break;\n          case 'gpx':\n            p = this._from_gpx(e.target.result);\n            break;\n          case 'jpeg':\n            p = this._from_image(e.target.result);\n            break;\n          case 'jpg':\n            p = this._from_image(e.target.result);\n            break;\n          case 'dsmap':\n            p = this._from_dsmap(JSON.parse(e.target.result));\n            break;\n          default:\n            p = this._from_json(JSON.parse(e.target.result));\n        }\n        return res(p);\n      };\n    });\n  }\n\n  //\n  // @param f: a file from DataService\n  // returns a promise with the LayerGroup\n  load_from_data_depot(f) {\n    let ext = GeoUtils.get_file_extension(f.name);\n    let responseType = 'text';\n    if ((ext === 'kmz') || (ext === 'jpg') || (ext === 'jpeg')) {\n      responseType = 'arraybuffer';\n    }\n    return this.$http.get(f.agaveUrl(), {'responseType': responseType}).then((resp) => {\n      let p = null;\n      switch (ext) {\n        case 'kml':\n          p =  this._from_kml(resp.data);\n          break;\n        case 'json':\n          p = this._from_json(resp.data);\n          break;\n        case 'geojson':\n          p = this._from_json(resp.data);\n          break;\n        case 'kmz':\n          p = this._from_kmz(resp.data);\n          break;\n        case 'gpx':\n          p = this._from_gpx(resp.data);\n          break;\n        case 'jpeg':\n          p = this._from_image(resp.data);\n          break;\n        case 'jpg':\n          p = this._from_image(resp.data);\n          break;\n        case 'dsmap':\n          p = this._from_dsmap(resp.data);\n          break;\n        default:\n          p = this._from_json(resp.data);\n      }\n      return p;\n    });\n  }\n\n  save_locally (project) {\n    let gjson = project.to_json();\n    let blob = new Blob([JSON.stringify(gjson)], {type: \"application/json\"});\n    let url  = URL.createObjectURL(blob);\n\n    let a = document.createElement('a');\n    document.body.appendChild(a);\n    a.download    = project.name + \".geojson\";\n    a.href        = url;\n    a.textContent = \"Download\";\n    a.click();\n    document.body.removeChild(a);\n  }\n\n  save_to_depot (project, path) {\n    console.log(project, path)\n    let form = new FormData();\n    let gjson = project.to_json();\n    let blob = new Blob([JSON.stringify(gjson)], {type: \"application/json\"});\n    let base_file_url = 'https://agave.designsafe-ci.org/files/v2/media/system/designsafe.storage.default';\n    let post_url = base_file_url;\n    let file = null;\n    if (path.type === 'dir') {\n      post_url = post_url + path.path;\n      file = new File([blob], path.name);\n      form.append('fileToUpload', file, path.name);\n    } else {\n      // A file was picked, so this WILL replace it\n      post_url = post_url + path.trail[path.trail.length-2].path;\n      file = new File([blob], path.name);\n      form.append('fileToUpload', file, path.name);\n    }\n    return this.$http.post(post_url, form, {headers: {'Content-Type': undefined}});\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/services/geo-data-service.js","export default class GeoSettingsService {\n\n  constructor () {\n    this.settings = {\n      default_fill_color: '#ff0000',\n      default_stroke_color: '#ff0000',\n      default_fill_opacity: 0.5,\n      measurement_units: 'si'\n    };\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/services/geo-settings-service.js","export default class GeoStateService {\n\n  constructor ($scope, $state) {\n    this.$scope = $scope;\n    this.$state = $state;\n    this.last_db_path = null;\n  }\n\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/services/geo-state-service.js","module.exports = L;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"L\"\n// module id = 15\n// module chunks = 0","import {mod as geo_directives} from './directives';\nimport {mod as geo_controllers} from './controllers';\nimport {mod as geo_services} from './services';\n\nlet mod = angular.module('designsafe');\nmod.requires.push('ui.router', 'ang-drag-drop', 'ds.geo.directives', 'ds.geo.controllers', 'ds.geo.services', 'toastr');\n\nfunction config($stateProvider, $uibTooltipProvider, $urlRouterProvider, $locationProvider, toastrConfig) {\n  'ngInject';\n\n  angular.extend(toastrConfig, {\n    timeOut: 1000\n  });\n\n  $locationProvider.html5Mode({\n    enabled: true\n  });\n\n  $stateProvider.state('geo', {\n    url: '',\n    abstract: true,\n    templateUrl: '/static/designsafe/apps/geo/html/index.html',\n    resolve: {\n      auth: function () {\n        return true;\n      }\n    }\n  }).state('geo.map', {\n    url: '/hazmapper',\n    templateUrl: '/static/designsafe/apps/geo/html/map.html',\n    controller: 'MapSidebarCtrl as vm'\n  }).state('geo.help', {\n    url: '/help',\n    templateUrl: '/static/designsafe/apps/geo/html/help.html',\n    controller: 'HelpCtrl as vm'\n  });\n  $urlRouterProvider.when('/', '/hazmapper');\n\n  //config popups etc\n  $uibTooltipProvider.options({popupDelay:1000});\n\n}\n\nmod.config(config);\n\n\n\nexport default mod;\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/index.js"],"sourceRoot":""}