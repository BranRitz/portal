{"version":3,"sources":["webpack:///webpack/bootstrap 3c49557c1616c925874e","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/controllers/db-modal.js","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/models/layer_group.js","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/models/map-project.js","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/utils/geo-utils.js","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/controllers/index.js","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/directives/index.js","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/services/index.js","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/controllers/confirm-clear-modal.js","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/controllers/help.js","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/controllers/image-overlay-modal.js","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/controllers/map-sidebar.js","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/controllers/settings-modal.js","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/directives/custom-on-change.js","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/services/geo-data-service.js","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/services/geo-settings-service.js","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/services/geo-state-service.js","webpack:///./designsafe/apps/geo/static/designsafe/apps/geo/scripts/index.js"],"names":["DBModalCtrl","$scope","$uibModalInstance","filename","selected","saveas","dismiss","label","fg","feature_group","show","show_contents","getLayers","f","options","name","layer_groups","description","forEach","lg","clearLayers","bounds","push","getBounds","total","num_features","out","tmp","json","feature","toGeoJSON","opt_keys","indexOf","key","properties","features","get_file_extension","fname","split","pop","toLowerCase","mod","controller","service","HelpCtrl","data","url","min_lat","max_lat","min_lon","max_lon","GeoUtils","MapSidebarCtrl","LGeo","$window","$interval","$q","$uibModal","DataService","$http","GeoDataService","GeoSettingsService","toastr","settings","local_file_selected","attribution","maxZoom","basemaps","streets","satellite","layers","preferCanvas","setView","mc","addTo","map","L","control","zoomControl","HazmapperDivIcon","divIcon","className","current_project","_init_map_layers","fit_map_to_project","project","addLayer","$timeout","active_layer_group","add_draw_controls","object","e","layer","fillColor","default_fill_color","fillOpacity","getElement","style","color","default_marker_color","$apply","console","log","position","draw","circle","marker","icon","edit","featureGroup","remove","drawControl","dc","removeLayer","Marker","on","ev","active","select_active_layer_group","create_layer_group","removeControl","current_layer","templateUrl","eachLayer","clear","p","fitBounds","markerBounds","src_lg","prop","styles","retval","error","open_existing","resolve","modal","result","then","load_from_data_depot","res","file","overlay","$","_load_data_success","loading","reqs","i","target","files","length","prom","all","val","rej","save_locally","newname","save_to_depot","success","err","restrict","scope","handler","link","element","UserService","previous_project_state","html","max_width","base64","_arrayBufferToBase64","ctx","canvas","getContext","canvasCopy","document","createElement","img","Image","src","onload","ratio","height","max_height","width","copyContext","drawImage","toDataURL","buffer","binary","encoded","btoa","text_blob","l","omnivore","kml","parse","d","zipper","proms","ext","zip","_from_kml","blob","pointToLayer","latlng","geoJSON","iconSize","lat","lon","bindPopup","maxWidth","image_src","preview","exif","GPSLatitude","latRef","GPSLatitudeRef","thumb","_resize_image","resp","opacity","layer_group_index","getLatLng","_make_image_marker","reader","readAsArrayBuffer","readAsText","_from_json","JSON","_from_gpx","responseType","body","appendChild","a","download","href","textContent","click","form","FormData","gjson","Blob","stringify","post_url","path","type","File","append","post","headers","default_fill_opacity","measurement_units","last_db_path","GeoStateService","angular","extend","toastrConfig","enabled","$stateProvider","state","abstract","auth","$urlRouterProvider","when","$uibTooltipProvider","config"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;IChEqBA,W;AAEnB,uBAAaC,MAAb,EAAqBC,iBAArB,EAAwCC,QAAxC,EAAkD;AAChD;;AADgD;;AAEhD;AACA,SAAKD,gBAAL;AACA,SAAKE,QAAL,GAAgB,IAAhB;AACA,SAAKC,MAAL,GAAc,EAACF,KAAf;AACD;;;;cAEK;AACJ,WAAKD,eAAL;AACD;;;kBAES;AACR,WAAKA,iBAAL,CAAuBI,CAAvB;AACD;;;;;;;;;;;;;;;;;;;;;;;;ACdD,sBAAaC,KAAb,EAAoBC,CAAI;AAAA;;AACtB;AACA,SAAKC,aAAL;AACA,SAAKC,IAAL,GAAY,IAAZ;AACA,SAAKC,YAAL;AACD;;;;wBAEe;AACd,aAAO,KAAKF,aAAL,CAAmBG,IAA1B;AACD;;;4BAEoB;AACnB;AACA,UAAIC,EAAEC,KAAmB;AACvB,eAAO,OAAP;AACD,OAFD,MAEO,IAAID,MAAuB;AAChC,eAAO,OAAP;AACD,OAFM,MAEA,IAAIA,MAAwB;AACjC,eAAO,SAAP;AACD,OAFM,MAEA;AACL;AACD;AACF;;;;;;;;;;;;;;;;;;;;;ACxBH;;;;;;;;;AAIE,sBAAaE,IAAb,EAAmB;AAAA;;AACjB;AACA,SAAKC,YAAL;AACA,SAAKC,WAAL,GAAmB,IAAnB;AACD;;;;iBAEO;AACN,WAAKD,YAAL,CAAkBE,KAAiB;AACjCC,WAAGV,aAAH,CAAiBW,WAAjB;AACD,OAFD;AAGD;;;sBAEY;AACX,UAAIC,SAAS,EAAb;AACA,WAAKL,WAA8B;AACjCK,eAAOC,IAAP,CAAYH,GAAGV,aAAH,CAAiBc,SAAjB,CAAZ;AACD,OAFD;AAGA;AACD;;;wBAEe;AACdC,cAAQ,CAAR;AACA,WAAKR,KAA8B;AACjCQ,iBAASL,GAAGM,YAAH,EAAT;AACD,OAFD;AAGD;;;mBAES;AACR,UAAIC,MAAM;AACR,gBAAQ,CADA;AAER,oBAAY,EAFJ;AAGR,kBAAU,IAHF;AAIR,gBAAQ,KAAKX,EAJL;AAKR,uBAAe,GALP;AAMR,sBAAc,KAAKC,YAAL,CANN;AAOR,wBAAgB;AAPR,OAAV;AASA,QAA2C;AACzCU,YAAIV,YAAJ,CAAiBM,IAAjB,CAAsBH,GAAGZ,KAAzB;AACA,YAAIoB,MAAM;AACR,kBAAQ,CADA;AAER,sBAAY,EAFJ;AAGR,mBAASR,GAAGZ;AAHJ,SAAV;AAKAY,UAAmD;AACjD,cAAIS,OAAOC,QAAQC,SAAR,EAAX;AACA;AACA;AACA,cAAIC,WAAW,CACb,OADa,EAEb,OAFa,EAGb,WAHa,EAIb,UAJF;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAiC;AAC/B,gBAAIA,SAASC,OAAT,CAAiBC,GAAjB,MAA0B,CAAC,CAAG;AAChCL,mBAAKM,UAAL,CAAgBD,GAAhB,IAAuBJ,QAAQf,EAA/B;AACD;AACF;AACDc,YAAA;AACAF,cAAIS,QAAJ,CAAab,IAAb,CAAkBM,IAAlB;AACD,SA7BD;AA8BD,OArCD;AAsCA;AACD;;;;;;;;;;;;;;;;;;;AChFI,SAASQ,kBAAT,CAA6BC,KAA7B,EAAoC;AACzC,SAAOA,MAAMC,KAAN,CAAY,GAAZ,EAAiBC,GAAjB,GAAuBC,IAA9B;AACD,C;;;;;;;;;;;;;ACFD;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;;AAEA;AACAC,IAAIC,UAAJ,CAAe,aAAf;AACAD,IAAIC,UAAJ,CAAe,UAAf;AACAD,IAAIC,UAAJ,CAAe,mBAAf;AACAD,IAAIC,UAAJ,CAAe,uBAAf;AACAD,IAAIC,UAAJ,CAAe,uBAAf;;;;;;;;;;;;;;;ACdA;;;;;;AAEA;;AAGA;kBACeD,G;;;;;;;;;;;;;ACLf;;;;AACA;;;;AACA;;;;;;AAHA;;AAMA;AACAA,IAAIE,OAAJ,CAAY,gBAAZ;AACAF,IAAIE,OAAJ,CAAY,oBAAZ;;AAEA;;;;;;;;;;;;;;;;;;;;ACRE,iCAAa1C,MAAb,EAA4D;AAC1D;;AAD0D;;AAE1D,SAAKA,MAAL,GAAcA,MAAd;AACA;AACD;;;;yBAEK;AACJ,WAAKC,GAAL;AACD;;;MAES;AACR,WAAKA,OAAL;AACD;;;;;;;;;;;;;;;;;;;;;ICdkB0C,Q,GAEnB,kBAAa3C,MAAb,EAAqB;AACnB;;AADmB;;AAEnB,OAAKA,MAAL,GAAcA,MAAd;;;;;;;;;;;;;;;;;;;;;ACFF,iCAAaA,MAAb,EAAqBC,iBAArB,EAAwC;AACtC;;AADsC;;AAEtC,SAAKD,MAAL;AACA;AACA,SAAK4C,IAAL,GAAY;AAAA;AAEVC,WAAK,IAFK;AAGVC,eAAS,IAHC;AAIVC,eAAS,EAJC;AAKVC,eAAS,EALC;AAMVC,eAAS;AANC,KAAZ;AAQD;;;;GAEK;AACJ;AACD;;;6BAES;AACR;AACD;;;;;;;;;;;;;;;;;;;;;ACtBH;;;;AACA;;;;AACA;;;;AACA;;IAAYC,Q;;;;;;;;IAESC,c;AAE+G;AAChI;;AADgI;;AAAA;;AAEhI;AACA,SAAKC,IAAL,GAAYC,KAAZ;AACA;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACA;AACA,SAAKC,EAAL,GAAUA,EAAV;AACA,SAAKC,SAAL,GAAiBA,QAAjB;AACA,SAAKC,WAAL,GAAmBA,MAAnB;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,cAAL,GAAsBA,CAAtB;AACA,SAAKC,QAAL;AACA,SAAKC,MAAL,GAAcA,MAAd;;AAEA,SAAKC,QAAL,GAAgB,GAAhB;;AAEA;AACA,SAAKC,gBAAL;AACA;;AAEgF;AAC5EC,mBAAa;AAD+D,KAAlE,CAAd;;AAKmG;AACjGA,mBAAa,QADoF;AAEjGC,eAAS;AAFwF,KADnF,CAAhB;;AAMA,QAAIC,WAAW;AACb,gBAAUC,OADG;AAEb,iBAAaC;AAFA,KAAf;AAI4B;AACxBC,cAAQ,CAACF,KADe;AAExBG,oBAAc;AAFU,KAAjB,EAGNC,OAHM,CAGE,CAAC,CAAD,EAAI,CAAJ,CAHF,EAGU,CAHV,CAAX;AAIA;AACA,SAAKC,EAAL,CAAQC,KAAR,CAAc,KAAKC,GAAnB;AACAC,MAAEC,OAAF,CAAUP,MAAV,CAAiBH,QAAjB,EAA2BO,IAA3B;AACA,SAAKC,GAAL,CAASG,WAAT;;AAEA;;AAEA,SAAKC,gBAAL,GAAwBH,EAAEI,OAAF,CAAU;AAChCC,iBAAW,WADqB;AAE1B;AAF0B,KAAV,CAAxB;;AAKA;AACA;AACA,QAAI,KAAKrB,cAAL,CAAoBsB,eAApB,EAAJ,EAA2C;AACzC;;AAEA,WAAKC,gBAAL;AACA,WAAKC,kBAAL;AAED,KAND,MAMO;AACL,WAAKC,OAAL,GAAe,yBAAe,SAAf,CAAf;AACA;AACA,WAAKV,GAAL,CAASW,QAAT,CAAkB,KAAKD,CAAvB;AACD;;AAED;;AAEA;AACAE,KAAgB;AAAC;AAA2B,KAA5C,EAA8C,EAA9C;;AAEA;AACA,SAAKC,iBAAL;;AAEA;AACA;AACAjC,cAAW,YAAM;AACf,YAAKK,cAAL,CAAoBsB,eAApB,CAAoC,MAAKG,OAAzC;AADF;;AAIA,SAAKI,iBAAL,CAAuB,KAAKD,kBAAL,CAAwB/E,YAA/C;;AAEA;AACA;AACoC;AAClC,UAAIiF,SAASC,EAAEC,KAAf;AACA;AACAF,aAAO5E,OAAP,CAAe+E,SAAf,GAA2B,MAAK9B,QAAL,CAAc+B,kBAAzC;AACAJ,aAAO5E,OAAP,CAAeiF,WAAf,GAA6B,MAAKhC,KAAlC;AACA,YAAKyB,kBAAL,CAAwB/E,aAAxB,CAAsC6E,CAAtC;AACA,UAAII,iBAA4B;AAC9BA,eAAOM,UAAP,GAAoBC,KAApB,CAA0BC,KAA1B,GAAkC,MAAKnC,QAAL,CAAcoC,QAAhD;AACAT,eAAO5E,OAAP,CAAe+E,SAAf,GAA2B,MAAK9B,QAAL,CAAcoC,iBAAzC;AAED;;AAED,YAAKlG,MAAL,CAAYmG,MAAZ;AACD,KAbD;;AAeA,OAAgC;AAC9B;AACA,YAAKnG,MAAL,CAAYmG,MAAZ;AACD,KAHD;AAMA;;;;OAEmB;AACnB,UAAI;AACF;AACD,OAFD,CAEE,OAAOT,CAAP,EAAU;AACVU,gBAAQC,GAAR,CAAY,UAAZ;AACD;AACF;;;sCAEkB9F,E,EAAI;AACrB,OAA4B;AAC1B+F,KAD0B;AAE1BC,MAAM;AACJC,kBAAQ,KADJ;AAEJC,kBAAQ;AACNC,kBAAM,KAAK5B;AADL;AAFJ,SAFoB;AAQ1B6B,cAAM;AACLC,mBADK;AAELC,kBAAQ;AAFH;AARoB,OAAnB,CAAT;AAaA,WAAKnC,GAAL;AACA,WAAKoC,WAAL,GAAmBC,EAAnB;AACD;;;8BAEqB;AACpBX,cAAQC,GAAR,CAAYV,KAAZ;AACD;;;uCAEkB;AAAA;;AACjB;AACA,WAAKP,OAAL,CAAarE,SAA4B;AACvC;AACA;AACA;AACA;AACA,eAAK2D,GAAL,CAASsC,WAAT,CAAqB9F,GAAGV,aAAxB;AACA,eAAKkE,GAAL,CAASW,QAAT,CAAkBnE,GAAGV,aAArB;AACAU,WAAGV,aAAH,CAAiBG,SAAjB,GAA6BM,CAAoB;AAC/CmF,cAAA;AACA,cAAMT,iBAAiBhB,EAAEsC,MAApB,IAAgC,CAAEtB,GAA2B;AAChEA,kBAAMI,UAAN,GAAmBC,KAAnB,CAAyBC,KAAzB,GAAiCN,IAAjC;AACD;AACF,SALD;AAMD,OAbD;AAcA,WAAKJ,kBAAL,GAA0B,KAAKH,OAAL,CAAarE,YAAb,CAA0B,CAA1B,CAA1B;AACD;;AAED;AACA;;;;0CACuB;AAAA;;AACrB,MAA2C;AACzCG,WAAGV,aAAH,CAAiB0G,EAAjB,CAAoB,GAAgB;AAClC,iBAAK9B,OAAL,CAAarE,YAAb,CAA0BE,KAAiB;AACzCC,eAAGV,SAA4C;AAC7C;AACA,kBAAImF,SAASwB,GAAGxB,KAAhB,EAAuB;AACrBA,sBAAMyB,MAAN,GAAe,IAAf;AACD;AACF,aALD;AAMD,WAPD;AAQD,SATD;AAUD,OAXD;AAYD;;;WAEqB;AACpB;AACA;AACA;AACA,WAAK1C,GAAL,CAASW,QAAT,CAAkBnE,GAAGV,GAArB;AACA,WAAK6G,yBAAL,CAA+B,KAA/B;AACD;;;uCAEmBnG,E,CAAO;AACzB,WAAKwD,GAAL,CAASsC,WAAT,CAAqB9F,GAAGV,aAAxB;AACA;AACA,MAA4C;AAC1C,aAAK8G,iBAAL;AACD;AACD,WAAK/B,kBAAL,GAA0B,KAAKH,OAAL,CAA1B;AACD;;;OAEsB;AACrB,WAAKV,GAAL,CAASsC,WAAT,CAAqBpG,CAArB;AACAM,KAAA;AACD;;;8BAE0B;AACzBA,SAAGT,IAAH,GAAU,KAAKiE,GAAL,CAASW,QAAT,CAAkBnE,GAAGV,CAA/B;AACD;;;8CAEyBU,CAAI;AAC5B,WAAKwD,GAAL,CAAS6C,aAAT,CAAuB,KAAKT,WAA5B;AACA;AACA;AACA5F,SAAGkG,MAAH,GAAY,IAAZ;AACAlG,SAAGT,IAAH,GAAU,IAAV;AACD;;;uBAI2B;AAC1B2F,cAAQC,GAAR,CAAY,GAAZ;AACA;AACA;AACAD,cAAQC,GAAR,CAAY,KAAKmB,GAAjB;AACD;;;yCAEqB;AAAA;;AACpB,MAAgC;AAC9BC,qBAAa,SADiB;AAE9BhF,oBAAY;AAFkB,OAApB,CAAZ;AAI0B;AACxB,eAAKiC,GAAL,CAASgD,SAAT,CAAmB,UAAiB;AAClCtB,kBAAQC,GAAR,CAAYV,KAAZ;AACA;AACD,SAHD;AAIA,eAAKP,OAAL,CAAauC,KAAb;AACA,YAAIC,IAAI,yBAAe,MAAvB;AACAA,UAAE7G,YAAF,GAAiB,CAAC,GAAlB;AACA,eAAKqE,OAAL,GAAewC,CAAf;AACA;AACA,eAAKlD,GAAL,CAASW,QAAT,CAAkB,GAAlB;AACD,OAXD;AAYD;;;4BAEOzD,O,EAAS;AACf,SAAiC;AAC9B;AACA;AACA,YAAI;AACF,eAAK8C,GAAL,CAASmD,SAAT,CAAmBC,SAAnB;AACD;AACA,SAHD,CAGE,OAAOpC,CAAP,EAAU;AACVU,kBAAQC,GAAR,CAAYX,CAAZ;AACD;AACH,OATD,MASO;AACL,YAAI;AACF,eAAKhB,GAAL,CAASmD,EAAT;AACD,SAFD,CAEE,OAAOnC,CAAP,EAAU;AACVU,SAAA;AACD;AACF;AACF;;;SAEsB;AACrB;AACA;AACA2B,MAAA;AACA7G,SAAGV,UAAH;AACD;;;uCAEmBwH,I,EAAM;AACxB,UAAItG,MAAM,KAAK8F,aAAf;AACA;AACA;AACA,UAAIS,SAAS,EAAb;AACAA,aAAOD,IAAP,IAAe,KAAKR,aAAL,CAAmB3G,MAAlC;AACA,UAAIa,eAAeiD,EAAEsC,MAArB,EAA6B;AACzBvF,YAAIqE,MAAJ;AACH,OAFD,MAEO;AACL,aAAKyB,SAAL;AACD;AACF;;;yCAEqBL,E,CAAc;AAClCf,OAAA;AACD;;;uCAEmB8B,M,EAAQ;AAAA;;AAC1B,MAAwB;AACtB,YAAIA,kBAA8B;AAChC;AACA,eAAK9C,OAAL,CAAarE,CAA8B;AACzC;AACD,WAFD;;AAIA;AACA,eAAKqE,OAAL,GAAe8C,MAAf;AACA,eAAKhD,gBAAL;AACA;AACK;AACL,eAAKrB,MAAL,CAAYsE,KAAZ,CAAkB,uBAAlB;AACD;AACD,aAAKC,aAAL,GAAqB,KAArB;AACD,OAfD,MAeO,IAAIF,mBAA8B;AACvCA,eAAOnH,CAA8B;AACnC,iBAAKqE,OAAL,CAAarE,YAAb,CAA0BM,IAA1B,CAA+BH,EAA/B;AACA;AACD,SAHD;AAIA,aAAKqE,kBAAL,GAA0B,KAAKH,OAAL,CAAarE,WAAvC;AACA,aAAKoE,kBAAL;AACD,OAPM,MAOA;;AAEL,WAA2C;AACzC,eAAKC,OAAL,CAAarE,YAAb,GAA4B,CAAC,wBAA7B;AACA,eAAKwE,kBAAL;AACA;AACD;AACD;AACA2C,eAAOjH,OAAP,CAAgB,UAACL,CAAD,EAAO;AACrB,iBAAK2E,kBAAL,CAAwB/E,aAAxB,CAAsC6E,QAAtC,CAA+CzE,CAA/C;AACD,SAFD;AAGA;AACD;AACF;;;kCAEwB;AACvB;AACA;AACD;;;gCAE0B;AACzB,WAAKwH,aAAL,GAAqB,GAArB;AACA;AACD;;;gCAEgB;AAAA;;AACf,MAAgC;AAC9BX,qBAAa,IADiB;AAE9BhF,oBAAY,iBAFkB;AAG9B4F,iBAAS;AACQ;AAAC,mBAAO,IAAP;AAAa;AADtB;AAHqB,OAApB,CAAZ;AAOAC,YAAMC,MAAN,CAAaC,IAAb,CAAmB,UAAC5H,CAAD,EAAIR,IAAW;AAAC,eAAKqI,SAAL;AAA8B,OAAjE;AACD;;;uCAEsB;AAAA;;AACrB,MAAgC;AAC9BhB,qBAAa,UADiB;AAE9BhF,oBAAY;AAFkB,OAApB,CAAZ;AAI0B;AACxB,eAAKqB,QAAL,GAAgB,OAAKF,MAArB;AAED,OAHD;AAID;;;+CAE2B;AAAA;;AAC1B,MAAgC;AAC9B6D,qBAAa,eADiB;AAE9BhF,oBAAY;AAFkB,OAApB,CAAZ;AAI4B;AAC1B,YAAIrB,eAAJ;AACAA,iBAAS,CACP,CAACsH,IAAI5F,OAAL,EAAc4F,IAAI1F,OAAlB,CADO,EAEP,CAAC0F,IAAI3F,OAAL,EAAc2F,IAAIzF,OAAlB,CAFO,CAAT;AAIA,YAAIyF,IAAIC,IAAR,EAAc;AACZ,SAAoE;AAClEvC,oBAAQC,GAAR,CAAYzD,IAAZ;AACD,WAFD;AAGD;AACD,YAAIgG,UAAUjE,CAAd;AACAyB,gBAAQC,GAAR,CAAYuC,OAAZ;AACD,OAbD;AAcD;;;6BAEmB;AAClB,SAAoB;AAClBC,KAAA;AACD,MAFD;AAGD;;;kCAEuB;AAAA;;AACtB;AACA,WAAKlF,cAAL,CAAoB8E,MAEP;AACT,eAAKK,kBAAL,CAAwBZ,MAAxB;AACA,eAAKa,OAAL;AAEM;AACN,eAAKlF,MAAL,CAAYsE,IAAZ;AACA,eAAKY,OAAL,GAAe,KAAf;AACA,eAAKX,aAAL,GAAqB,KAArB;AACD,OAVH;AAWD;;;qCAEwB;AAAA;;AACvB;AACA,UAAIY,OAAO,EAAX;AACA,WAAK,IAAIC,IAAE,CAAX,EAAcA,IAAE9B,GAAG+B,MAAH,CAAUC,KAAV,CAAgBC,GAAa;AAC3C;AACA;AACA,YAAIC,OAAO,KAAK1F,EAA2D;AAAC,iBAAO,GAAP;AAAwC,SAAzG,CAAX;AACAqF,aAAK3H,IAAL,CAAUgI,CAAV;AACA;AACD;AACD,WAAK9F,EAAL,CAAQ+F,GAAR,CAAYN,IAAZ,EAAkBR,IAAlB,CAAwB,YAAI;AAC1B;AACA;AACAK,UAAE,cAAF,EAAkBU,GAAlB,CAAsB,EAAtB;AACA;AACD,OALD,EAKG,UAACC,GAAD,EAAO;AACR,gBAAKT,OAAL,GAAe,KAAf;AACA,gBAAKlF,MAAL,CAAYsE,GAAZ;AACD,OARD,EAQGK,IARH,CAQS,YAAM,CAEd,CAVD;AAWD;;;mCAEe;AACd,WAAK7E,cAAL,CAAoB8F,IAApB;AACD;;;oCAEgB;AAAA;;AACf,MAAgC;AAC9BhC,qBAAa,IADiB;AAE9BhF,oBAAY,iBAFkB;AAG9B4F,iBAAS;AACQ;AAAC,mBAAO,QAAKjD,OAAL,CAAatE,IAApB;AAAuC;AADhD;AAHqB,OAApB,CAAZ;AAOAwH,YAAMC,MAAN,CAAaC,IAAb,CAAmB,UAACE,GAAD,EAAS;AAC1B,YAAIgB,UAAUhB,IAAItI,MAAlB;AACA;AACAsI,SAAA;AACA;AACA,gBAAK/E,cAAL,CAAoBgG,SAA0D;AAC5E,kBAAKZ,OAAL,GAAe,KAAf;AACA,kBAAKlF,MAAL,CAAY+F,OAAZ,CAAoB,oBAApB;AACD,SAHD,EAGG,UAACC,GAAD,EAAS;AACV,kBAAKhG,MAAL,CAAYsE,KAAZ;AACA,kBAAKY,OAAL,GAAe,KAAf;AACD,SAND;AAOD,OAZD,EAYG,UAACS,GAAD,EAAQ;AACT,gBAAKT,OAAL,GAAe,CAAf;AACD,OAdD;AAgBD;;;;;;;;;;;;;;;;;;;;;;;;AC7bD,6BAAa/I,MAAb,EAAqBC,iBAArB,EAAwC2D,kBAAxC,EAA4D;AAC1D;;AAD0D;;AAE1D,SAAK5D,MAAL,GAAcA,MAAd;AACA,SAAKC,iBAAL,GAAyBA,iBAAzB;AACA,SAAK2D,MAAL;AACA;AACD;;;;yBAEK;AACJ,WAAKA,kBAAL,CAAwBE,QAAxB,GAAmC,KAAKA,EAAxC;AACA;AACD;;;;;;;;;;;;;;;;;;;ACbsC;AAChC;AACLgG,cAAU,GADL;AAELC,WAAO;AACLC,GAAS;AADJ,KAFF;AAKLC,UAAM,cAAUF,GAAuB;AACrCG,UAAmC;AACjCH,cAAM5D,IAAiB;AACrB4D,YAAA;AACD,SAFD;AAGD,MAJD;AAKD;AAXI,GAAP;AAaD,C;;;;;;;;;;;;;;;ACdD;;;;AACA;;;;AACA;;;;;;;;;;IAGqBpG,c;AAEsC;AACvD;;AADuD;;AAEvD,SAAKD,KAAL,GAAaA,KAAb;AACA,SAAKH,EAAL,GAAUA,EAAV;AACA,SAAK4G,WAAL,GAAmBA,WAAnB;AACA,SAAKvG,MAAL;AACA;AACA,SAAKwG,sBAAL,GAA8B,IAA9B;AACkC;AAChCpF,iBAAW,MADqB;AAEhCqF,YAAM;AAF0B,KAAV,CAAxB;AAID;;;;6BAEwB;AACvB,UAAI,CAAEjF,OAAN,EAAgB;AACd;AACD;AACD;AACD;;;qBAEmD;AAAA;;AAAA,UAA/BkF,SAA+B;AAAA;;AAClD,aAAO,KAAK/G,EAAL,CAAS,IAAc;AAC5B,YAAIgH,SAAS,MAAKC,cAAlB;AACA;AACA;AACA,YAAIC,MAAMC,OAAOC,UAAP,CAAkB,IAAlB,CAAV;AACA,YAAIC,aAAaC,SAASC,aAAT,CAAuB,QAAvB,CAAjB;AACA;;AAEA;AACA,YAAIC,MAAM,IAAIC,KAAJ,EAAV;AACAD,YAAIE,GAAJ,GAAUV,MAAV;AACAQ,YAAIG,MAAJ,GAAa,YAAI;AACf;AACA,cAAIC,QAAQ,CAAZ;AAC0B;AACxBA,oBAAQb,YAAR;AACD,WAFD,MAEO,IAAGS,IAAIK,KAAqB;AACjCD,oBAAQE,KAAR;AACD;AACD;AACAT,qBAAWU,GAAX;AACAV,qBAAWQ,MAAX,GAAoBL,IAAIK,IAAxB;AACAG,sBAAYC,SAAZ,CAAsBT,GAAtB,EAA2B,CAA3B,EAA8B,CAA9B;;AAEA;AACAL,WAAA;AACAA,iBAAOU,MAAP,GAAgBL,IAAIK,MAAJ,GAAaD,KAA7B;AACAV,cAAIe,SAAJ,CAAcZ,UAAd,EAA0B,CAA1B;AACAlC,cAAIgC,OAAOe,SAAP,EAAJ;AACD,SAlBD;AAXF;AA+BD;;;yCAEqBC,M,EAAS;AAC7B,UAAIC,SAAS,EAAb;AACA;AACA;AACA,KAA8B;AAC1BA,MAAA;AACH;AACD,UAAIC,UAAWC,KAAMF,MAAN,CAAf;AACA,aAAO,SAAP;AACD;;;8BAESG,S,EAAW;AACnB,OAA8B;AAC5B,YAAI5J,WAAW,EAAf;AACA,YAAI6J,IAAIC,SAASC,GAAT,CAAaC,KAAb,CAAmBJ,SAAnB,CAAR;AACAC,KAA6B;AAC3B;AACAI,YAAEtL,OAAF,CAAUP,CAAV;AACA4B,mBAASb,IAAT,CAAc8K,CAAd;AACD,SAJD;AAKAzD,YAAIxG,QAAJ;AACD,OATM,CAAP;AAUD;;;2BAEgB;AAAA;;AACf,SAA8B;AAC5B;AACAkK,MAAsC;AACpC;AACA,cAAIC,QAAQ,EAAZ;AACA,eAAK,IAAIrK,GAAT,EAA2B;AACzB;AACA,gBAAIsK,QAAQ,KAAZ,EAAmB;AACjB,qBAAOC,IAAIpD,KAAJ,CAAUnH,EAAjB;AACD;AACF;AACF,SATD,EASGwG,IATH,CASS,SAAS;AAChB,cAAItG,WAAW,OAAKsK,MAApB;AACA9D,cAAIxG,QAAJ;AACD,SAZD;AAaD,OAfM,CAAP;AAgBD;;;+BAEWuK,I,EAAM;AAAA;;AAChB,SAA8B;AAC5B,KAAiB;;AAEjB,YAAI;AAAA;AACF,gBAAIvK,QAAJ;AACc;AACZwK,4BAAc,cAAoB;AAC9B,uBAAO/H,EAAE8B,MAAF,CAASkG,MAAT,EAAiB,EAACjG,MAAM,OAAK5B,OAApC;AACH;AAHW,aAAd;AAKAH,cAAEiI,OAAF,CAAUH,EAA+C;AACvD,mBAAK,IAAIzK,GAAT,IAA0C;AACxC2D,sBAAM9E,KAAN;AACD;AACDqB,uBAASb,IAAT,CAAcsE,KAAd;AACD,aALD;AAMA+C,cAAA;AAbE;AAcH,SAdD,CAcE,OAAOhD,CAAP,EAAU;AACV8D,cAAI,aAAJ;AACD;AACF,OApBM,CAAP;AAqBD;;;qBAEgB;AACf,aAAO,KAAKjG,EAAL,CAAS,QAAc;AAC5B;AACA;AACA;AACAwI,MAA6B;AAC3B7J,mBAASb,EAAT;AACD,SAFD;AAGAqH,YAAIxG,QAAJ;AACD,OARM,CAAP;AASD;;;2BAEuD;AACtD,UAAIwE,CAAiB;AACnBmG,kBAAU,CAAC,EAAD,CADS;AAEnBxC,SAFmB;AAGnBrF,KAAW;AAHQ,MAArB;;AAMA,UAAIyB,SAAS9B,EAAE8B,MAAF,CAAS,CAACqG,GAAD,EAAMC,GAAN,CAAT,EAAqB,EAACrG,MAAMA,IAAP,EAArB,EACNsG,SADM,CACI,UACP;AACEhI,mBAAW,SADb;AAEEiI,kBAAU;AAFZ,OAFG,CAAb;AAOAxG,aAAO5F,OAAP,CAAeqM,SAAf,GAA2BC,OAA3B;AACA1G,SAAA;AACA;AACA,aAAOA,MAAP;AACD;;;gCAEYkC,I,EAAM;AAAA;;AACjB,aAAO,KAAKpF,EAAkB;AAC5B,KAAI;AAAA;AACF,gBAAI6J,OAAJ;AACA,gBAAIN,MAAMM,KAAKC,WAAf;AACA,gBAAIN,MAAMK,EAAV;AACA;AACA,gBAAIE,SAASF,KAAKG,YAAlB;AACA;AACAT,kBAAM,CAACA,IAAI,CAAX;AACAC,kBAAM,CAACA,IAAI,CAAJ,IAASA,IAAI,CAAJ,IAAO,EAAhB,GAAqBA,IAAI,CAAJ,IAAO,EAAnC;AACA,gBAAKD,MAAM,EAAP,IAAeA,MAAM,CAAC,EAAtB,EAA0D;AAC5DtD,kBAAI,mBAAJ;AACD;AACD,gBAAIoC,UAAU,OAAKpB,mBAAnB;AACA,gBAAIgD,QAAQ,IAAZ;AACA,gBAAIL,UAAU,IAAd;AACA,mBAAKM,aAAL,CAAmB9E,IAAnB,EAAyB,GAAzB,EAA8B,GAA9B,EAAmCH,IAAnC,CAAyC,UAACkF,IAAD,EAAQ;AAC/CF,sBAAQE,IAAR;AACD,aAFD,EAEGlF,IAFH,CAES,YAAI;AACX;AACD,aAJD,EAIGA,IAJH,CAIS,UAACkF,IAAD,EAAQ;AACfP,wBAAUO,IAAV;AACA,kBAAIjH,SAAS,IAAb;AACAiC,kBAAI,CAACjC,MAAD,CAAJ;AACD,aARD;AAfE;AAwBH,SAxBD,CAwBE,OAAOf,CAAP,EAAU;AACV8D,cAAI9D,CAAJ;AACD;AACF,OA5BM,CAAP;AA6BD;;;qBAGkB;AAAA;;AACjB,SAA8B;AAC5B;AACA;AACA,YAAI7E,UAAU;AACZ6L,wBAAc,eAAoB;AAC9B,mBAAO/H,EAAE8B,GAAT;AACH;AAHW,SAAd;AAKArB,gBAAQtE,IAAR,GAAea,KAAKb,IAApB;AACAsE,gBAAQpE,WAAR,GAAsBW,KAAKX,WAA3B;AACAW,aAAKZ,UAAgC;AACnCqE,kBAAQrE,YAAR,CAAqBM,IAArB,CAA0B,0BAAeP,EAAzC;AACD,SAFD;AAGAa,WAA6B;AAC3B;AACAC,kBAAQ8F,SAAR,CAAmB,KAAU;AAC3BtB,oBAAQC,GAAR,CAAYV,KAAZ;AACA;AACA,gBAAI,CAAEA,MAAM/D,OAAN,CAAcK,UAAd,CAAyBgE,KAA/B,EAAuC;AACtCN,WAAA;AACA;AACD,gBAAI,CAAEA,MAAM/D,OAAN,CAAcK,UAAd,CAAyB2D,IAAY;AACzCD,oBAAM/D,OAAN,CAAcK,UAAd,CAAyB2D,OAAzB;AACD;AACD,gBAAI,CAAED,MAAM/D,OAAN,CAAcK,UAAd,CAAyB0L,OAA/B,EAAyC;AACvChI,oBAAM/D,OAAN,CAAcK,UAAd,CAAyB0L,OAAzB,GAAmC,CAAnC;AACD;;AAED,iBAAK,IAAI3L,GAAT,IAAgB2D,MAAM/D,OAAN,CAAcK,UAA9B,EAA0C;AACxC0D,oBAAM9E,OAAN,CAAcmB,GAAd,IAAqB2D,MAAM/D,OAAN,CAAcK,UAAd,CAAyBD,CAA9C;AACD;AACD,gBAAI;AACF,kBAAIiG,SAAS;AACXrC,cADW;AAAA;AAGX+H,yBAAShI,MAAM/D,OAAN,CAAcK,UAAd,CAAyB0L;AAHvB,eAAb;AAKAhI,aAAA;AACD,aAPD,CAOE,GAAU;AACV;AACA;AACAS,sBAAQC,GAAR,CAAYX,CAAZ;AACD;;AAED,gBAAIkI,oBAAoBzB,CAAxB;AACA,gBAAKxG,SAAoE;AACvE,kBAAIgH,SAAShH,MAAMkI,SAAN,EAAb;AACAlI,sBAAQ,OAAKmI,kBAAL,CAAR;AACA;AACA;AACD;AACD;AACA;AACA;AACA1I,oBAAQrE,YAAR,CAAqB6M,iBAArB,EAAwCpN,aAAxC,CAAsD6E,QAAtD,CAA+DM,KAA/D;AACAA,kBAAM9E,OAAN,CAAcP,KAAd,GAAsB6L,EAAElK,UAAF,CAAa3B,KAAnC;AACD,WAzCD;AA2CD,SA7CD;AA8CAoI,YAAItD,OAAJ;AACD,OA5DM,CAAP;AA6DD;;;aAE2B;;AAE1B,UAAI2I,SAAS,EAAb;AACA,SAA8B;AAC5BA,KAAA;;AAEAA,eAAO7C,MAAP,GAAgB,SAAO;AACrB,iBAAOxC,IAAIqF,OAAOxF,MAAX,CAAP;AADF;AAGD,OANM,CAAP;AAOD;;AAED;;;;;;;MAI4B;AAAA;;AAC1B,MAA8B;AAC5B;AACA;AACA;AACA,YAAK+D,QAAQ,KAAT,IAAoBA,QAAQ,MAA5B,IAAwCA,CAAe;AACzDyB,iBAAOC,OAAP;AACK;AACLD,iBAAOE,UAAP,CAAkBtF,IAAlB;AACD;AACDoF,eAAO7C,MAAP,GAAgB,UAACxF,CAAD,EAAO;AACrB;AACA,kBAAQ4G,GAAR;AACE,iBAAK,KAAL;AACE1E,gBAAA;AACA;AACF;AACEA,kBAAI,OAAKsG,UAAL,CAAgBC,EAApB;AACA;AACF,iBAAK,OAAL;AACEvG,kBAAI,KAAJ;AACA;AACF,iBAAK,GAAL;AACEA,kBAAI,MAAJ;AACA;AACF,iBAAK,GAAL;AACEA,kBAAI,OAAKwG,EAAT;AACA;AACF,iBAAK,GAAL;AACExG,kBAAI,KAAJ;AACA;AACF,iBAAK,GAAL;AACEA,kBAAI,KAAJ;AACA;AACF,iBAAK,GAAL;AACEA,kBAAI,MAAJ;AACA;AACF;AACEA,kBAAI,KAAJ;AA1BJ;AA4BA,iBAAOc,GAAP;AACD,SA/BD;AAgCD,OAzCM,CAAP;AA0CD;;AAED;AACA;AACA;;;;AACwB;AAAA;;AACtB,UAAI4D,MAAMpJ,SAASf,kBAAT,CAAV;AACA;AACA,MAA4D;AAC1DkM,uBAAe,SAAf;AACD;AACD,aAAO,KAAK3K,KAAL,CAA4E;AACjF;AACA,gBAAQ4I,GAAR;AACE,eAAK,KAAL;AACE1E,gBAAK,OAAK4E,SAAL,CAAekB,KAAK9K,IAApB,CAAL;AACA;AACF;AACEgF,gBAAI,OAAKsG,UAAL,CAAgBR,KAAK9K,IAArB,CAAJ;AACA;AACF,eAAK,OAAL;AACEgF,gBAAI,KAAJ;AACA;AACF,eAAK,GAAL;AACEA,gBAAI,MAAJ;AACA;AACF,eAAK,GAAL;AACEA,gBAAI,OAAKwG,EAAT;AACA;AACF,eAAK,GAAL;AACExG,gBAAI,KAAJ;AACA;AACF,eAAK,GAAL;AACEA,gBAAI,KAAJ;AACA;AACF,eAAK,GAAL;AACEA,gBAAI,MAAJ;AACA;AACF;AACEA,gBAAI,KAAJ;AA1BJ;AA4BA,eAAOA,CAAP;AACD,OA/BM,CAAP;AAgCD;;;iCAEaxC,O,EAAS;AACrB;AACA,UAAIqH,OAAJ;AACA;;AAEA;AACA5B,eAASyD,IAAT,CAAcC,IAAd;AACAC,QAAEC,QAAF,GAAgBrJ,QAAQtE,IAAR,GAAe,SAA/B;AACA0N,QAAEE,IAAF,GAAgB7L,GAAhB;AACA2L,QAAEG,WAAF,GAAgB,UAAhB;AACAH,QAAEI,KAAF;AACA;AACD;;;mBAE6B;AAC5B,UAAIC,OAAO,IAAIC,QAAJ,EAAX;AACA,UAAIC,MAAJ;AACA,UAAItC,OAAO,IAAIuC,IAAJ,CAAS,CAACb,KAAKc,GAA1B;AACA;AACA;AACAC,iBAAWA,QAAX;AACA,UAAIvG,OAAO,IAAX;AACA,UAAIwG,KAAKC,IAAL,KAAc,KAAlB,EAAyB;AACvBF,mBAAWA,WAAWC,KAAKA,CAA3B;AACAxG,eAAO,IAAI0G,IAAJ,CAAS,CAAC5C,IAAD,CAAT,EAAiB0C,KAAKrO,IAAtB,CAAP;AACA+N,aAAKS,MAAL,CAAY,cAAZ,EAA4B3G,IAA5B,EAAkCwG,KAAKrO,IAAvC;AACD,OAJD,MAIO;AACL;AACAoO,mBAAWA,GAAX;AACAvG,eAAO,IAAI0G,IAAJ,CAAS,CAAC5C,IAAD,CAAT,EAAP;AACAoC,aAAKS,MAAL,CAAY,cAAZ,EAA4B3G,IAA5B;AACD;AACD,aAAO,KAAKjF,KAAL,CAAW6L,IAAX,CAAgBL,QAAhB,EAA0BL,IAA1B,EAAgC,EAACW,MAAxC;AACD;;;;;;kBAtYkB7L,c;;;;;;;;;;;;;;;ACHJ;AAAA;;AACb,GAAgB;AAAA;AAEdkC,wBAAoB,SAFN;AAAA;AAId4J,0BAAsB,GAJR;AAKdC,uBAAmB;AALrB;AAOD,C;;kBAVkB9L,gB;;;;;;;;;;;;;;;ACEU;AAAA;;AAC3B;AACA;AACA,OAAK+L,YAAL,GAAoB,IAApB;;;kBALiBC,e;;;;;;;;;;;;;;;;;;;ACArB;;AACA;;AACA;;AAEA;AACA;;AAE0G;AACxG;;AAEAC,UAAQC,MAAR,CAAeC,YAAf,EAA6B;AAClB;AADkB,GAA7B;;AAI4B;AAC1BC,aAAS;AADiB,GAA5B;;AAIAC,iBAAeC,KAAf,CAAqB,KAArB,EAA4B;AAC1BrN,SAAK,EADqB;AAE1BsN,KAF0B;AAAA;AAI1B9H,aAAS;AACP+H,YAAM,KAAY;AAChB;AACD;AAHM;AAJiB,GAA5B,EASGF,KATH,CASS,CAAW;AAClBrN,SAAK,UADa;AAElB4E,iBAAa,2CAFK;AAGlBhF,cAAY;AAHM,GATpB,EAaGyN,KAbH,CAaS,UAbT,EAaqB;AACnBrN,SAAK,OADc;AAEnB4E,OAFmB;AAGnBhF,KAAY;AAHO,GAbrB;AAkBA4N,qBAAmBC,CAAnB;;AAEA;AACAC,sBAAoB1P,EAApB;AAED;;AAED2B,IAAIgO,MAAJ,CAAWA,MAAX;;kBAIehO,G","file":"./designsafe/apps/geo/static/designsafe/apps/geo/build/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 17);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3c49557c1616c925874e","export default class DBModalCtrl {\n\n  constructor ($scope, $uibModalInstance, filename) {\n    'ngInject';\n    this.$scope = $scope;\n    this.$uibModalInstance = $uibModalInstance;\n    this.selected = null;\n    this.saveas = {filename: filename};\n  }\n\n  ok () {\n    this.$uibModalInstance.close({selected:this.selected, saveas:this.saveas.filename});\n  };\n\n  cancel () {\n    this.$uibModalInstance.dismiss('cancel');\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/controllers/db-modal.js","export default class LayerGroup {\n\n  constructor (label, fg) {\n    this.label = label;\n    this.feature_group = fg;\n    this.show = true;\n    this.show_contents = true;\n  }\n\n  num_features () {\n    return this.feature_group.getLayers().length;\n  }\n\n  get_feature_type (f) {\n    // debugger\n    if (f.options.image_src) {\n      return 'Image';\n    } else if (f instanceof L.Marker) {\n      return 'Point';\n    } else if (f instanceof L.Polygon) {\n      return 'Polygon';\n    } else {\n      return 'Path';\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/models/layer_group.js","import L from 'L';\n\nexport default class MapProject {\n\n  constructor (name) {\n    this.name = name;\n    this.layer_groups = [];\n    this.description = null;\n  }\n\n  clear() {\n    this.layer_groups.forEach( (lg) => {\n      lg.feature_group.clearLayers();\n    });\n  }\n\n  get_bounds() {\n    let bounds = [];\n    this.layer_groups.forEach( (lg) => {\n      bounds.push(lg.feature_group.getBounds());\n    });\n    return bounds;\n  }\n\n  num_features () {\n    total = 0;\n    this.layer_groups.forEach( (lg) => {\n      total += lg.num_features();\n    });\n  }\n\n  to_json() {\n    let out = {\n      \"type\": \"FeatureCollection\",\n      \"features\": [],\n      \"ds_map\": true,\n      \"name\": this.name,\n      \"description\": this.description,\n      \"num_layers\": this.layer_groups.length,\n      \"layer_groups\": []\n    };\n    this.layer_groups.forEach( (lg, lg_idx) => {\n      out.layer_groups.push(lg.label);\n      let tmp = {\n        \"type\": \"FeatureCollection\",\n        \"features\": [],\n        \"label\": lg.label\n      };\n      lg.feature_group.getLayers().forEach( (feature) => {\n        let json = feature.toGeoJSON();\n        // These are all the keys in the options object that we need to\n        // re-create the layers in the application after loading.\n        let opt_keys = [\n          'label',\n          'color',\n          'fillColor',\n          'fillOpacity',\n          'description',\n          'image_src',\n          'thumb_src',\n          'original_src',\n        ];\n\n        // //add in any options\n        // if (feature.options.image_src) {\n        //   json.properties.image_src = feature.options.image_src;\n        // }\n        // if (feature.options.thumb_src) {\n        //   json.properties.thumb_src = feature.options.thumb_src;\n        // }\n        for (let key in feature.options) {\n          if (opt_keys.indexOf(key) !== -1) {\n            json.properties[key] = feature.options[key];\n          }\n        };\n        json.layer_group_index = lg_idx;\n        out.features.push(json);\n      });\n    });\n    return out;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/models/map-project.js","export function get_file_extension (fname) {\n  return fname.split('.').pop().toLowerCase();\n}\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/utils/geo-utils.js","import MapSidebarCtrl from './map-sidebar';\nimport DBModalCtrl from './db-modal';\nimport ImageOverlayModalCtrl from './image-overlay-modal.js';\nimport HelpCtrl from './help';\nimport SettingsModalCtrl from './settings-modal';\nimport ConfirmClearModalCtrl from './confirm-clear-modal';\n\nlet mod = angular.module('ds.geo.controllers', []);\n\nmod.controller('MapSidebarCtrl', MapSidebarCtrl);\nmod.controller('DBModalCtrl', DBModalCtrl);\nmod.controller('HelpCtrl', HelpCtrl);\nmod.controller('SettingsModalCtrl', SettingsModalCtrl);\nmod.controller('ConfirmClearModalCtrl', ConfirmClearModalCtrl);\nmod.controller('ImageOverlayModalCtrl', ImageOverlayModalCtrl);\n\nexport default mod;\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/controllers/index.js","import customOnChange from './custom-on-change';\n\nlet mod = angular.module('ds.geo.directives', []);\n\n\nmod.directive('customOnChange', customOnChange);\nexport default mod;\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/directives/index.js","// import customOnChange from './custom-on-change';\nimport GeoStateService from './geo-state-service';\nimport GeoDataService from './geo-data-service';\nimport GeoSettingsService from './geo-settings-service';\n\nlet mod = angular.module('ds.geo.services', []);\nmod.service('GeoStateService', GeoStateService);\nmod.service('GeoDataService', GeoDataService);\nmod.service('GeoSettingsService', GeoSettingsService);\n\n// mod.directive('customOnChange', customOnChange);\n\nexport default mod;\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/services/index.js","export default class ConfirmClearModalCtrl {\n\n  constructor ($scope, $uibModalInstance, GeoSettingsService) {\n    'ngInject';\n    this.$scope = $scope;\n    this.$uibModalInstance = $uibModalInstance;\n  }\n\n  ok () {\n    this.$uibModalInstance.close('ok');\n  };\n\n  cancel () {\n    this.$uibModalInstance.dismiss('cancel');\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/controllers/confirm-clear-modal.js","export default class HelpCtrl {\n\n  constructor ($scope) {\n    'ngInject';\n    this.$scope = $scope;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/controllers/help.js","export default class ImageOverlayModalCtrl {\n\n  constructor ($scope, $uibModalInstance) {\n    'ngInject';\n    this.$scope = $scope;\n    this.$uibModalInstance = $uibModalInstance;\n    this.data = {\n      file: null,\n      url: null,\n      min_lat: null,\n      max_lat: null,\n      min_lon: null,\n      max_lon: null\n    };\n  }\n\n  ok () {\n    this.$uibModalInstance.close(this.data);\n  };\n\n  cancel () {\n    this.$uibModalInstance.dismiss('cancel');\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/controllers/image-overlay-modal.js","import LayerGroup from '../models/layer_group';\nimport MapProject from '../models/map-project';\nimport DBModalCtrl from './db-modal';\nimport * as GeoUtils from '../utils/geo-utils';\n\nexport default class MapSidebarCtrl {\n\n  constructor ($scope, $window, $timeout, $interval, $q, $uibModal, toastr, DataService, $http, GeoDataService, GeoSettingsService) {\n    'ngInject';\n    this.$scope = $scope;\n    this.LGeo = $window.LGeo;\n    this.$timeout = $timeout;\n    this.$interval = $interval;\n    this.$window = $window;\n    this.$q = $q;\n    this.$uibModal = $uibModal;\n    this.DataService = DataService;\n    this.$http = $http;\n    this.GeoDataService = GeoDataService;\n    this.GeoSettingsService = GeoSettingsService;\n    this.toastr = toastr;\n\n    this.settings = this.GeoSettingsService.settings;\n\n    //method binding for callback, sigh...\n    this.local_file_selected = this.local_file_selected.bind(this);\n    // this.open_db_modal = this.open_db_modal.bind(this);\n\n    let streets = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n    });\n\n    let satellite = L.tileLayer(\n      'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {\n      attribution: '&copy;',\n      maxZoom: 20,\n    });\n\n    let basemaps = {\n      'Street': streets,\n      'Satellite': satellite\n    };\n    this.map = L.map('geo_map', {\n        layers: [streets, satellite],\n        preferCanvas: false\n      }).setView([0, 0], 3);\n    this.mc = new L.Control.Measure({primaryLengthUnit:'meters', primaryAreaUnit: 'meters'});\n    this.mc.addTo(this.map);\n    L.control.layers(basemaps).addTo(this.map);\n    this.map.zoomControl.setPosition('bottomleft');\n\n    // Overload the default icon creator\n\n    this.HazmapperDivIcon = L.divIcon({\n      className: 'hm-marker',\n      html: \"<div> <i class='fa fa-map-marker'> </i> </div>\"\n    });\n\n    // Load in a map project from the data service if one does exist, if not\n    // create a new one from scratch\n    if (this.GeoDataService.current_project()) {\n      this.project = this.GeoDataService.current_project();\n\n      this._init_map_layers();\n      this.fit_map_to_project();\n\n    } else {\n      this.project = new MapProject('New Map');\n      this.project.layer_groups = [new LayerGroup('New Group', new L.FeatureGroup())];\n      this.map.addLayer(this.project.layer_groups[0].feature_group);\n    }\n\n    // this._add_click_handlers();\n\n    // trick to fix the tiles that sometimes don't load for some reason...\n    $timeout( () => {this.map.invalidateSize();}, 10);\n\n    // init an active layer group\n    this.active_layer_group = this.project.layer_groups[0];\n\n    // Auto keep track of current project in the GeoDataService\n    // so that if they switch states they will not lose work...\n    $interval( () => {\n      this.GeoDataService.current_project(this.project);\n    }, 1000);\n\n    this.add_draw_controls(this.active_layer_group.feature_group);\n\n    // This handles making sure that the features that get created with the draw tool\n    // are styled with the default colors etc.\n    this.map.on('draw:created',  (e) => {\n      let object = e.layer;\n      object.options.color = this.settings.default_stroke_color;\n      object.options.fillColor = this.settings.default_fill_color;\n      object.options.fillOpacity = this.settings.default_fill_opacity;\n      this.active_layer_group.feature_group.addLayer(object);\n      if (object instanceof L.Marker) {\n        object.getElement().style.color = this.settings.default_marker_color;\n        object.options.fillColor = this.settings.default_marker_color;\n\n      }\n\n      this.$scope.$apply();\n    });\n\n    this.map.on('mousemove', (e) => {\n      this.current_mouse_coordinates = e.latlng;\n      this.$scope.$apply();\n    });\n\n\n  } // end constructor\n\n  fit_map_to_project() {\n    try {\n      this.map.fitBounds(this.project.get_bounds(), {maxZoom: 16});\n    } catch (e) {\n      console.log('get_bounds fail', e);\n    }\n  }\n\n  add_draw_controls (fg) {\n    let dc = new L.Control.Draw({\n      position: 'topright',\n      draw: {\n        circle: false,\n        marker: {\n          icon: this.HazmapperDivIcon\n        }\n      },\n      edit: {\n       featureGroup: fg,\n       remove: true\n      }\n    });\n    this.map.addControl(dc);\n    this.drawControl = dc;\n  }\n\n  feature_click (layer) {\n    console.log(layer);\n  }\n\n  _init_map_layers() {\n    // For some reason, need to readd the feature groups for markers to be displayed correctly???\n    this.project.layer_groups.forEach( (lg)=>{\n      // lg.feature_group.getLayers().forEach( (layer)=>{\n      //   this.map.addLayer(layer);\n      // });\n      // this.map.addLayer(lg.feature_group);\n      this.map.removeLayer(lg.feature_group);\n      this.map.addLayer(lg.feature_group);\n      lg.feature_group.getLayers().forEach( (layer) => {\n        console.log(layer.feature)\n        if ( (layer instanceof L.Marker) && (!(layer.options.image_src)) ){\n          layer.getElement().style.color = layer.options.fillColor;\n        }\n      });\n    });\n    this.active_layer_group = this.project.layer_groups[0];\n  }\n\n  // Adds click handlers to map elements. This does NOT feel\n  // right to me...\n  _add_click_handlers () {\n    this.project.layer_groups.forEach( (lg) => {\n      lg.feature_group.on('click', (ev)=> {\n        this.project.layer_groups.forEach( (lg) => {\n          lg.feature_group.getLayers().forEach( (layer)=>{\n            layer.active = false;\n            if (layer == ev.layer) {\n              layer.active = true;\n            }\n          });\n        });\n      });\n    });\n  }\n\n  create_layer_group () {\n    let lg = new LayerGroup(\"New Group\", new L.FeatureGroup());\n    this.project.layer_groups.push(lg);\n    this.active_layer_group = this.project.layer_groups[this.project.layer_groups.length -1];\n    this.map.addLayer(lg.feature_group);\n    this.select_active_layer_group(this.active_layer_group);\n  }\n\n  delete_layer_group (lg, i) {\n    this.map.removeLayer(lg.feature_group);\n    this.project.layer_groups.splice(i, 1);\n    if (this.project.layer_groups.length === 0) {\n      this.create_layer_group();\n    }\n    this.active_layer_group = this.project.layer_groups[0];\n  }\n\n  delete_feature (lg, f) {\n    this.map.removeLayer(f);\n    lg.feature_group.removeLayer(f);\n  }\n\n  show_hide_layer_group (lg) {\n    lg.show ? this.map.addLayer(lg.feature_group) : this.map.removeLayer(lg.feature_group);\n  }\n\n  select_active_layer_group(lg) {\n    this.map.removeControl(this.drawControl);\n    this.add_draw_controls(lg.feature_group);\n    this.active_layer_group = lg;\n    lg.active = true;\n    lg.show = true;\n  }\n\n\n\n  select_feature(lg, feature) {\n    console.log(\"ASDASDASDASDA\")\n    this.active_layer_group = lg;\n    this.current_layer == feature ? this.current_layer = null : this.current_layer = feature;\n    console.log(this.current_layer)\n  }\n\n  create_new_project () {\n    let modal = this.$uibModal.open({\n      templateUrl: \"/static/designsafe/apps/geo/html/confirm-new-modal.html\",\n      controller: \"ConfirmClearModalCtrl as vm\",\n    });\n    modal.result.then( (s) => {\n      this.map.eachLayer(function (layer) {\n        console.log(layer);\n        // this.map.removeLayer(layer);\n      });\n      this.project.clear();\n      let p = new MapProject('New Map');\n      p.layer_groups = [new LayerGroup('New Group', new L.FeatureGroup())];\n      this.project = p;\n      this.active_layer_group = this.project.layer_groups[0];\n      this.map.addLayer(this.active_layer_group.feature_group);\n    });\n  }\n\n  zoom_to(feature) {\n    if (feature instanceof L.Marker) {\n       let latLngs = [ feature.getLatLng() ];\n       let markerBounds = L.latLngBounds(latLngs);\n       try {\n         this.map.fitBounds(markerBounds, {maxZoom: 16});\n        //  feature.getElement().style.border = '2px solid red';\n       } catch (e) {\n         console.log(e);\n       }\n    } else {\n      try {\n        this.map.fitBounds(feature.getBounds(), {maxZoom: 16});\n      } catch (e) {\n        console.log(e);\n      }\n    };\n  }\n\n  on_drop (ev, data, lg) {\n    let src_lg = this.project.layer_groups[data.pidx];\n    let feature = src_lg.feature_group.getLayers()[data.idx];\n    src_lg.feature_group.removeLayer(feature);\n    lg.feature_group.addLayer(feature);\n  }\n\n  update_layer_style (prop) {\n    let tmp = this.current_layer;\n    // debugger;\n    // this.current_layer.setStyle({prop: this.current_layer.options[prop]});\n    let styles = {};\n    styles[prop] = this.current_layer.options[prop];\n    if (tmp instanceof L.Marker) {\n        tmp.getElement().style.color = this.current_layer.options.fillColor;\n    } else {\n      this.current_layer.setStyle(styles);\n    }\n  }\n\n  drop_feature_success (ev, data, lg) {\n    console.log(\"drag_feature_success\", ev, data, lg);\n  }\n\n  _load_data_success (retval) {\n    if (this.open_existing) {\n      if (retval instanceof MapProject) {\n        //clear off all the layers from the map\n        this.project.layer_groups.forEach( (lg) => {\n          this.map.removeLayer(lg.feature_group);\n        });\n\n        // set the project to be the return value\n        this.project = retval;\n        this._init_map_layers();\n        this.fit_map_to_project();\n      } else {\n        this.toastr.error('Load failed! File was not compatible');\n      }\n      this.open_existing = false;\n    } else if (retval instanceof MapProject) {\n      retval.layer_groups.forEach( (lg) => {\n        this.project.layer_groups.push(lg);\n        this.map.addLayer(lg.feature_group);\n      });\n      this.active_layer_group = this.project.layer_groups[0];\n      this.fit_map_to_project();\n    } else {\n\n      if (this.project.layer_groups.length == 0) {\n        this.project.layer_groups = [new LayerGroup('New Group', new L.FeatureGroup())];\n        this.active_layer_group = this.project.layer_groups[0];\n        this.map.addLayer(this.project.layer_groups[0].feature_group);\n      }\n      //it will be an array of features...\n      retval.forEach( (f) => {\n        this.active_layer_group.feature_group.addLayer(f);\n      });\n      this.fit_map_to_project();\n    }\n  }\n\n  open_existing_locally () {\n    this.open_existing = true;\n    this.open_file_dialog();\n  }\n\n  open_existing_from_depot() {\n    this.open_existing = true;\n    this.open_db_modal();\n  }\n\n  open_db_modal () {\n    let modal = this.$uibModal.open({\n      templateUrl: \"/static/designsafe/apps/geo/html/db-modal.html\",\n      controller: \"DBModalCtrl as vm\",\n      resolve: {\n        filename: ()=> {return null;}\n      }\n    });\n    modal.result.then( (f, saveas) => {this.load_from_data_depot(f);});\n  }\n\n  open_settings_modal () {\n    let modal = this.$uibModal.open({\n      templateUrl: \"/static/designsafe/apps/geo/html/settings-modal.html\",\n      controller: \"SettingsModalCtrl as vm\",\n    });\n    modal.result.then( (s) => {\n      this.settings = this.GeoSettingsService.settings;\n\n    });\n  }\n\n  open_image_overlay_modal () {\n    let modal = this.$uibModal.open({\n      templateUrl: \"/static/designsafe/apps/geo/html/image-overlay-modal.html\",\n      controller: \"ImageOverlayModalCtrl as vm\",\n    });\n    modal.result.then( (res) => {\n      let bounds;\n      bounds = [\n        [res.min_lat, res.min_lon],\n        [res.max_lat, res.max_lon]\n      ];\n      if (res.file) {\n        this.GeoDataService.read_file_as_data_url(res.file).then( (data) => {\n          console.log(data);\n        });\n      }\n      let overlay = L.imageOverlay(res.url, bounds).addTo(this.map);\n      console.log(overlay);\n    });\n  }\n\n  open_file_dialog () {\n    this.$timeout(() => {\n      $('#file_picker').click();\n    }, 0);\n  }\n\n  load_from_data_depot(f) {\n    this.loading = true;\n    this.GeoDataService.load_from_data_depot(f.selected)\n      .then(\n      (retval) =>{\n        this._load_data_success(retval);\n        this.loading = false;\n      },\n      (err)=> {\n        this.toastr.error('Load failed!');\n        this.loading = false;\n        this.open_existing = false;\n      });\n  }\n\n  local_file_selected (ev) {\n    this.loading = true;\n    let reqs = [];\n    for (let i=0; i<ev.target.files.length; i++) {\n      // debugger\n      let file = ev.target.files[i];\n      let prom = this.GeoDataService.load_from_local_file(file).then( (retval) =>{return this._load_data_success(retval);});\n      reqs.push(prom);\n      // this.loading = false;\n    };\n    this.$q.all(reqs).then( ()=>{\n      this.loading = false;\n      //reset the picker\n      $('#file_picker').val('');\n      this.toastr.success('Imported file');\n    }, (rej)=>{\n      this.loading = false;\n      this.toastr.error('Load failed!');\n    }).then( () => {\n\n    });\n  }\n\n  save_locally () {\n    this.GeoDataService.save_locally(this.project);\n  }\n\n  save_to_depot () {\n    let modal = this.$uibModal.open({\n      templateUrl: \"/static/designsafe/apps/geo/html/db-modal.html\",\n      controller: \"DBModalCtrl as vm\",\n      resolve: {\n        filename: ()=> {return this.project.name + '.geojson';}\n      }\n    });\n    modal.result.then( (res) => {\n      let newname = res.saveas;\n      this.project.name = newname.split('.')[0];\n      res.selected.name = res.saveas;\n      this.loading = true;\n      this.GeoDataService.save_to_depot(this.project, res.selected).then( (resp) => {\n        this.loading = false;\n        this.toastr.success('Saved to data depot');\n      }, (err) => {\n        this.toastr.error('Save failed!');\n        this.loading = false;\n      });\n    }, (rej)=> {\n      this.loading = false;\n    });\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/controllers/map-sidebar.js","export default class SettingsModalCtrl {\n\n  constructor ($scope, $uibModalInstance, GeoSettingsService) {\n    'ngInject';\n    this.$scope = $scope;\n    this.$uibModalInstance = $uibModalInstance;\n    this.GeoSettingsService = GeoSettingsService;\n    this.settings = GeoSettingsService.settings;\n  }\n\n  ok () {\n    this.GeoSettingsService.settings = this.settings;\n    this.$uibModalInstance.close(this.settings);\n  };\n\n  // cancel () {\n  //   this.$uibModalInstance.dismiss('cancel');\n  // };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/controllers/settings-modal.js","export default function customOnChange() {\n  return {\n    restrict: 'A',\n    scope: {\n      handler: '&'\n    },\n    link: function (scope, element, attrs) {\n      element.on('change', function (ev) {\n        scope.$apply(function(){\n          scope.handler({ev:ev});\n        });\n      });\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/directives/custom-on-change.js","import * as GeoUtils from '../utils/geo-utils';\nimport LayerGroup from '../models/layer_group';\nimport MapProject from '../models/map-project';\n\n\nexport default class GeoDataService {\n\n  constructor ($http, $q, UserService, GeoSettingsService) {\n    'ngInject';\n    this.$http = $http;\n    this.$q = $q;\n    this.UserService = UserService;\n    this.GeoSettingsService = GeoSettingsService;\n    this.active_project = null;\n    this.previous_project_state = null;\n    this.HazmapperDivIcon = L.divIcon({\n      className: 'hm-marker',\n      html: \"<div> <i class='fa fa-map-marker'> </i> </div>\"\n    });\n  }\n\n  current_project(project) {\n    if (!(project)) {\n      return this.active_project;\n    }\n    this.active_project = project;\n  }\n\n  _resize_image (blob, max_width=400, max_height=400) {\n    return this.$q( (res, rej) => {\n      let base64 = this._arrayBufferToBase64(blob);\n      // Create and initialize two canvas\n      let canvas = document.createElement(\"canvas\");\n      let ctx = canvas.getContext(\"2d\");\n      let canvasCopy = document.createElement(\"canvas\");\n      let copyContext = canvasCopy.getContext(\"2d\");\n\n      // Create original image\n      let img = new Image();\n      img.src = base64;\n      img.onload = ()=>{\n        // Determine new ratio based on max size\n        let ratio = 1;\n        if(img.width > max_width) {\n          ratio = max_width / img.width;\n        } else if(img.height > max_height) {\n          ratio = max_height / img.height;\n        }\n        // Draw original image in second canvas\n        canvasCopy.width = img.width;\n        canvasCopy.height = img.height;\n        copyContext.drawImage(img, 0, 0);\n\n        // Copy and resize second canvas to first canvas\n        canvas.width = img.width * ratio;\n        canvas.height = img.height * ratio;\n        ctx.drawImage(canvasCopy, 0, 0, canvasCopy.width, canvasCopy.height, 0, 0, canvas.width, canvas.height);\n        res(canvas.toDataURL());\n      };\n    });\n  }\n\n  _arrayBufferToBase64( buffer ) {\n    let binary = '';\n    let bytes = new Uint8Array( buffer );\n    let len = bytes.byteLength;\n    for (let i = 0; i < len; i++) {\n        binary += String.fromCharCode( bytes[ i ] );\n    }\n    let encoded =  btoa( binary );\n    return 'data:image/jpg;base64,' + encoded;\n  }\n\n  _from_kml(text_blob) {\n    return this.$q( (res, rej) => {\n      let features = [];\n      let l = omnivore.kml.parse(text_blob);\n      l.getLayers().forEach((d) => {\n        // d.feature.properties = {};\n        d.options.label = d.feature.properties.name;\n        features.push(d);\n      });\n      res(features);\n    });\n  }\n\n  _from_kmz (blob) {\n    return this.$q( (res, rej) => {\n      let zipper = new JSZip();\n      zipper.loadAsync(blob).then( (zip) => {\n        //loop over all the files in the archive\n        let proms = [];\n        for (let key in zip.files) {\n          let ext = key.split('.').pop();\n          if (ext === 'kml') {\n            return zip.files[key].async('text');\n          }\n        }\n      }).then( (txt) => {\n        let features = this._from_kml(txt);\n        res(features);\n      });\n    });\n  }\n\n  _from_json (blob) {\n    return this.$q( (res, rej) => {\n      if (blob.ds_map) return res(this._from_dsmap(blob));\n\n      try {\n        let features = [];\n        let options = {\n          pointToLayer: (feature, latlng)=> {\n              return L.marker(latlng, {icon: this.HazmapperDivIcon});\n          }\n        };\n        L.geoJSON(blob, options).getLayers().forEach( (layer) => {\n          for (let key in layer.feature.properties) {\n            layer.options[key] = layer.feature.properties[key];\n          }\n          features.push(layer);\n        });\n        res(features);\n      } catch (e) {\n        rej('Bad geoJSON');\n      }\n    });\n  }\n\n  _from_gpx (blob) {\n    return this.$q( (res, rej) => {\n      // console.log(text_blob)\n      let features = [];\n      let l = omnivore.gpx.parse(blob);\n      l.getLayers().forEach((d) => {\n        features.push(d);\n      });\n      res(features);\n    });\n  }\n\n  _make_image_marker (lat, lon, thumb, preview, original) {\n    let icon = L.divIcon({\n      iconSize: [40, 40],\n      html: \"<div class='image' style='background:url(\" + original + \");background-size: 100% 100%'></div>\",\n      className: 'leaflet-marker-photo'\n    });\n\n    let marker = L.marker([lat, lon], {icon: icon})\n          .bindPopup(\"<img src=\" + preview + \"><a target=blank onclick='window.open(this.href)' href=\" + original + \">full res</a>\",\n              {\n                className: 'leaflet-popup-photo',\n                maxWidth: \"auto\",\n                // maxHeight: 400\n              });\n    marker.options.image_src = preview;\n    marker.options.thumb_src = thumb;\n    marker.options.original_src = original;\n    return marker;\n  }\n\n  _from_image (file) {\n    return this.$q( (res, rej) => {\n      try {\n        let exif = EXIF.readFromBinaryFile(file);\n        let lat = exif.GPSLatitude;\n        let lon = exif.GPSLongitude;\n        //Convert coordinates to WGS84 decimal\n        let latRef = exif.GPSLatitudeRef || \"N\";\n        let lonRef = exif.GPSLongitudeRef || \"W\";\n        lat = (lat[0] + lat[1]/60 + lat[2]/3600) * (latRef == \"N\" ? 1 : -1);\n        lon = (lon[0] + lon[1]/60 + lon[2]/3600) * (lonRef == \"W\" ? -1 : 1);\n        if ((lat > 90) || (lat < -90) || (lon > 360) || (lon < -360)) {\n          rej('Bad EXIF GPS data');\n        }\n        let encoded = this._arrayBufferToBase64(file);\n        let thumb = null;\n        let preview = null;\n        this._resize_image(file, 100, 100).then( (resp)=>{\n          thumb = resp;\n        }).then( ()=>{\n          return this._resize_image(file, 400, 400);\n        }).then( (resp)=>{\n          preview = resp;\n          let marker = this._make_image_marker(lat, lon, thumb, preview, encoded);\n          res([marker]);\n        });\n      } catch (e) {\n        rej(e);\n      }\n    });\n  }\n\n\n  _from_dsmap (json) {\n    return this.$q( (res, rej) => {\n      // if (json instanceof String) {\n      let project = new MapProject();\n      let options = {\n        pointToLayer: (feature, latlng)=> {\n            return L.marker(latlng, {icon: this.HazmapperDivIcon});\n        }\n      };\n      project.name = json.name;\n      project.description = json.description;\n      json.layer_groups.forEach( (name) => {\n        project.layer_groups.push(new LayerGroup(name, new L.FeatureGroup()));\n      });\n      json.features.forEach( (d)=> {\n        let feature = L.geoJSON(d, options);\n        feature.eachLayer( (layer)=> {\n          console.log(layer)\n          // If there were no styles applied, it might be transparent???\n          if (!(layer.feature.properties.color)) {\n           layer.feature.properties.color = '#ff0000';\n          };\n          if (!(layer.feature.properties.fillColor)) {\n            layer.feature.properties.fillColor = '#ff0000';\n          };\n          if (!(layer.feature.properties.opacity)) {\n            layer.feature.properties.opacity = 1.0;\n          };\n\n          for (let key in layer.feature.properties) {\n            layer.options[key] = layer.feature.properties[key];\n          }\n          try {\n            let styles = {\n              fillColor: layer.feature.properties.fillColor,\n              color: layer.feature.properties.color,\n              opacity: layer.feature.properties.opacity\n            };\n            layer.setStyle(styles);\n          } catch (e) {\n            // this can get caught for marker type objects, which for some reason\n            // do not have a setStyle() method\n            console.log(e);\n          }\n\n          let layer_group_index = d.layer_group_index;\n          if ((layer instanceof L.Marker) && (layer.feature.properties.image_src)) {\n            let latlng = layer.getLatLng();\n            layer = this._make_image_marker(latlng.lat, latlng.lng, layer.feature.properties.thumb_src, layer.feature.properties.image_src, layer.feature.properties.original_src);\n            // feat.options.image_src = feat.feature.properties.image_src;\n            // feat.options.thumb_src = feat.feature.properties.thumb_src;\n          }\n          // if ( (layer instanceof L.Marker) && (!(layer.feature.properties.image_src)) ) {\n          //   layer.getElement().style.color = layer.feature.properties.fillColor;\n          // }\n          project.layer_groups[layer_group_index].feature_group.addLayer(layer);\n          layer.options.label = d.properties.label;\n        });\n\n      });\n      res(project);\n    });\n  }\n\n  read_file_as_data_url(file) {\n\n    let reader = new FileReader();\n    return this.$q( (res, rej) => {\n      reader.readAsDataURL(file);\n\n      reader.onload = (e) => {\n        return res(reader.result);\n      };\n    });\n  }\n\n  /*\n  This will return a promise that resolves to an array of features\n  that can be added to a LayerGroup\n  */\n  load_from_local_file (file) {\n    return this.$q( (res, rej) => {\n      let ext = GeoUtils.get_file_extension(file.name);\n      let reader = new FileReader();\n      //\n      if ((ext === 'kmz') || (ext === 'jpeg') || (ext === 'jpg')){\n        reader.readAsArrayBuffer(file);\n      } else {\n        reader.readAsText(file);\n      }\n      reader.onload = (e) => {\n        let p = null;\n        switch (ext) {\n          case 'kml':\n            p =  this._from_kml(e.target.result);\n            break;\n          case 'json':\n            p = this._from_json(JSON.parse(e.target.result));\n            break;\n          case 'geojson':\n            p = this._from_json(JSON.parse(e.target.result));\n            break;\n          case 'kmz':\n            p = this._from_kmz(e.target.result);\n            break;\n          case 'gpx':\n            p = this._from_gpx(e.target.result);\n            break;\n          case 'jpeg':\n            p = this._from_image(e.target.result);\n            break;\n          case 'jpg':\n            p = this._from_image(e.target.result);\n            break;\n          case 'dsmap':\n            p = this._from_dsmap(JSON.parse(e.target.result));\n            break;\n          default:\n            p = this._from_json(JSON.parse(e.target.result));\n        }\n        return res(p);\n      };\n    });\n  }\n\n  //\n  // @param f: a file from DataService\n  // returns a promise with the LayerGroup\n  load_from_data_depot(f) {\n    let ext = GeoUtils.get_file_extension(f.name);\n    let responseType = 'text';\n    if ((ext === 'kmz') || (ext === 'jpg') || (ext === 'jpeg')) {\n      responseType = 'arraybuffer';\n    }\n    return this.$http.get(f.agaveUrl(), {'responseType': responseType}).then((resp) => {\n      let p = null;\n      switch (ext) {\n        case 'kml':\n          p =  this._from_kml(resp.data);\n          break;\n        case 'json':\n          p = this._from_json(resp.data);\n          break;\n        case 'geojson':\n          p = this._from_json(resp.data);\n          break;\n        case 'kmz':\n          p = this._from_kmz(resp.data);\n          break;\n        case 'gpx':\n          p = this._from_gpx(resp.data);\n          break;\n        case 'jpeg':\n          p = this._from_image(resp.data);\n          break;\n        case 'jpg':\n          p = this._from_image(resp.data);\n          break;\n        case 'dsmap':\n          p = this._from_dsmap(resp.data);\n          break;\n        default:\n          p = this._from_json(resp.data);\n      }\n      return p;\n    });\n  }\n\n  save_locally (project) {\n    let gjson = project.to_json();\n    let blob = new Blob([JSON.stringify(gjson)], {type: \"application/json\"});\n    let url  = URL.createObjectURL(blob);\n\n    let a = document.createElement('a');\n    document.body.appendChild(a);\n    a.download    = project.name + \".geojson\";\n    a.href        = url;\n    a.textContent = \"Download\";\n    a.click();\n    document.body.removeChild(a);\n  }\n\n  save_to_depot (project, path) {\n    let form = new FormData();\n    let gjson = project.to_json();\n    let blob = new Blob([JSON.stringify(gjson)], {type: \"application/json\"});\n    let base_file_url = 'https://agave.designsafe-ci.org/files/v2/media/system/';\n    let post_url = base_file_url;\n    post_url = post_url + path.system;\n    let file = null;\n    if (path.type === 'dir') {\n      post_url = post_url + path.path;\n      file = new File([blob], path.name);\n      form.append('fileToUpload', file, path.name);\n    } else {\n      // A file was picked, so this WILL replace it\n      post_url = post_url + path.trail[path.trail.length-2].path;\n      file = new File([blob], path.name);\n      form.append('fileToUpload', file, path.name);\n    }\n    return this.$http.post(post_url, form, {headers: {'Content-Type': undefined}});\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/services/geo-data-service.js","export default class GeoSettingsService {\n\n  constructor () {\n    this.settings = {\n      default_marker_color: '#71c4ff',\n      default_fill_color: '#ff0000',\n      default_stroke_color: '#ff0000',\n      default_fill_opacity: 0.5,\n      measurement_units: 'si'\n    };\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/services/geo-settings-service.js","export default class GeoStateService {\n\n  constructor ($scope, $state) {\n    this.$scope = $scope;\n    this.$state = $state;\n    this.last_db_path = null;\n  }\n\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/services/geo-state-service.js","import {mod as geo_directives} from './directives';\nimport {mod as geo_controllers} from './controllers';\nimport {mod as geo_services} from './services';\n\nlet mod = angular.module('designsafe');\nmod.requires.push('ui.router', 'ang-drag-drop', 'ds.geo.directives', 'ds.geo.controllers', 'ds.geo.services', 'toastr');\n\nfunction config($stateProvider, $uibTooltipProvider, $urlRouterProvider, $locationProvider, toastrConfig) {\n  'ngInject';\n\n  angular.extend(toastrConfig, {\n    timeOut: 1000\n  });\n\n  $locationProvider.html5Mode({\n    enabled: true\n  });\n\n  $stateProvider.state('geo', {\n    url: '',\n    abstract: true,\n    templateUrl: '/static/designsafe/apps/geo/html/index.html',\n    resolve: {\n      auth: function () {\n        return true;\n      }\n    }\n  }).state('geo.map', {\n    url: '/hazmapper',\n    templateUrl: '/static/designsafe/apps/geo/html/map.html',\n    controller: 'MapSidebarCtrl as vm'\n  }).state('geo.help', {\n    url: '/help',\n    templateUrl: '/static/designsafe/apps/geo/html/help.html',\n    controller: 'HelpCtrl as vm'\n  });\n  $urlRouterProvider.when('/', '/hazmapper');\n\n  //config popups etc\n  $uibTooltipProvider.options({popupDelay:1000});\n\n}\n\nmod.config(config);\n\n\n\nexport default mod;\n\n\n\n// WEBPACK FOOTER //\n// ./designsafe/apps/geo/static/designsafe/apps/geo/scripts/index.js"],"sourceRoot":""}